axis(1, at=x)
axis(2, at=seq(0,1,0.1), las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot.new()
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
plot.new()
axis(1, at=rot)
plot.new()
axis(1, at=rot)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T, plot=F)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T, plot=F)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
grid(NA, 5, lwd = 2) # grid only in y-direction
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
grid(NA, 5, lwd = 2) # grid only in y-direction
#abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
grid(NA, 10, lwd = 2) # grid only in y-direction
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
grid(NA, 10, lwd = 2) # grid only in y-direction
#abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
grid(NA, 10, lwd = 2) # grid only in y-direction
#abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot, pos=0)
axis(2, at=seq(0,1,0.1), pos=0, las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
grid(NA, 10, lwd = 2) # grid only in y-direction
#abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), pos=0, las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
grid(NA, 10, lwd = 2) # grid only in y-direction
#abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot, pos=0)
axis(2, at=seq(0,1,0.1), las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="o", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, yaxs="i", frame.plot=T)
grid(NA, 10, lwd = 2) # grid only in y-direction
#abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot, pos=0)
axis(2, at=seq(0,1,0.1), las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
axis(2, at=seq(0,1,0.1), las=2)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
plot(rot, counts, type="o", pch=16, col=col1)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
plot(rot, counts, type="o", pch=16, col=col1, add=T)
add(rot, counts, type="o", pch=16, col=col1)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
add(rot, counts, type="o", pch=16, col=col1)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey10", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
lines(rot, counts, type="o", pch=16, col=col1)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey5", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
lines(rot, counts, type="o", pch=16, col=col1)
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
rot <- seq(100,180,10)
plot(rot, counts, type="n", pch=16, col=col1, main="Distribución acumulada del arco de rotación de la cabeza", xlab="Arco de rotación (grados)", ylab="Frecuencia acumulada", axes=F, frame.plot=T)
abline(h=seq(0,1,0.1), col="grey50", lty="dotted")
axis(1, at=rot)
axis(2, at=seq(0,1,0.1), las=2)
lines(rot, counts, type="o", pch=16, col=col1)
h$counts
cumsum(h$counts)
c(0,cumsum(h$counts))/sum(h$counts)
counts
h <- hist(x, plot=F)
counts <- c(0,cumsum(h$counts))/sum(h$counts)
counts
sum(h$counts)
cumsum(h$counts)
cumsum(h$counts)/30
library(rk.Teaching)
?sd
ny
ny <- length(y)
ny
setwd("/media/alf/datos/web/asalber.github.io/estadistica/examenes")
getwd()
library(knitr)
knit("fisioterapia-2018-04-09.Rmd", "fisioterapia-2018-04-09.md")
knit("fisioterapia-2018-04-09.Rmd", "fisioterapia-2018-04-09.md")
knit("fisioterapia-2018-04-09.Rmd", "fisioterapia-2018-04-09.md")
knit("fisioterapia-2018-04-09.Rmd", "fisioterapia-2018-04-09.md")
knit("fisioterapia-2018-04-09.Rmd", "fisioterapia-2018-04-09.md")
knit("fisioterapia-2018-04-09.Rmd", "fisioterapia-2018-04-09.md")
setwd("/media/alf/datos/web/asalber.github.io/statistics/exams")
knit("physiotherapy-2018-04-09.Rmd", "physiotherapy-2018-04-09.md")
ni <- c(5, 67, 139, 184, 196, 198, 199, 200)
ni/200
0.920-0.335
0.335-0.025
=0.025+0.31/3
0.025+0.31/3
.920-.695
0.695+.225/3
0.77-0.1283
.8-.695
24+0.105*3/.225
18+(.25-.025)/(.335-.025)*3
24+(.75-.695)/(.920-.695)*3
24.7333-20.1774
iq <- 24.7333-20.1774
20.1774-1.5*iq
24.7333+1.5*iq
set.seed(1234)
x <- runif(20, 10, 50)
y1 <- 1.5*x+100
y1 <- y1 + rnorm(20, 0, 7)
y2 <- 0.5*x+90
y2 <- y2 + rnorm(20, 0, 2)
## QUESTION/ANSWER GENERATION
# sample size
n <- length(x)
n1 <- length(y1)
n2 <- length(y2)
# means
mx <- mean(x)
my1 <- mean(y1)
my2 <- mean(y2)
# variances
s2x <- sum(x^2)/n-mx^2
s2y1 <- sum(y1^2)/n1-my1^2
s2y2 <- sum(y2^2)/n2-my2^2
# Covariances
sxy1 <- sum(x*y1)/n1-mx*my1
sxy2 <- sum(x*y2)/n2-mx*my2
# Determination coeff
r2xy1 <- sxy1^2/(s2x1*s2y1)
set.seed(1234)
x <- runif(20, 10, 50)
y1 <- 1.5*x+100
y1 <- y1 + rnorm(20, 0, 7)
y2 <- 0.5*x+90
y2 <- y2 + rnorm(20, 0, 2)
## QUESTION/ANSWER GENERATION
# sample size
n <- length(x)
n1 <- length(y1)
n2 <- length(y2)
# means
mx <- mean(x)
my1 <- mean(y1)
my2 <- mean(y2)
# variances
s2x <- sum(x^2)/n-mx^2
s2y1 <- sum(y1^2)/n1-my1^2
s2y2 <- sum(y2^2)/n2-my2^2
# Covariances
sxy1 <- sum(x*y1)/n1-mx*my1
sxy2 <- sum(x*y2)/n2-mx*my2
# Determination coeff
r2xy1 <- sxy1^2/(s2x*s2y1)
r2xy2 <- sxy2^2/(s2x*s2y2)
# Regression lines
reglinxy1 <- lm(y1~x)
reglinxy2 <- lm(y2~x)
sum(x)
set.seed(123)
x <- runif(20, 10, 50)
y1 <- 1.5*x+100
y1 <- y1 + rnorm(20, 0, 7)
y2 <- 0.5*x+90
y2 <- y2 + rnorm(20, 0, 2)
## QUESTION/ANSWER GENERATION
# sample size
n <- length(x)
n1 <- length(y1)
n2 <- length(y2)
# means
mx <- mean(x)
my1 <- mean(y1)
my2 <- mean(y2)
# variances
s2x <- sum(x^2)/n-mx^2
s2y1 <- sum(y1^2)/n1-my1^2
s2y2 <- sum(y2^2)/n2-my2^2
# Covariances
sxy1 <- sum(x*y1)/n1-mx*my1
sxy2 <- sum(x*y2)/n2-mx*my2
# Determination coeff
r2xy1 <- sxy1^2/(s2x*s2y1)
r2xy2 <- sxy2^2/(s2x*s2y2)
# Regression lines
reglinxy1 <- lm(y1~x)
reglinxy2 <- lm(y2~x)
sum(x)
sum(x)/20
mx
sum(y1)
sum(y1)/n1
sum(y1)/20
my1
s2y1
439517.5975/20-my1^2
sy1
# Std. Deviations
sy1 <- sqrt(s2y1)
sy2 <- sqrt(s2y2)
# Coef. Variation
cvy1 <- sy1/my1
cvy2 <- sy2/my2
sy1
cvy1
my2
s2y1
s2y2
sy1
sy2
cvy2
# Coef. skewness
g1y1 <- sum((y1-my1)^3)/(ny1*sy1^3)
g1y2 <- sum((y2-my2)^3)/(ny2*sy2^3)
# Coef. skewness
g1y1 <- sum((y1-my1)^3)/(n1*sy1^3)
g1y2 <- sum((y2-my2)^3)/(n2*sy2^3)
g1y1
604.08/(20*16.7551^3)
g1y2
# Coef. kurtosis
g2y1 <- sum((y1-my1)^4)/(n1*sy1^4)-3
g2y2 <- sum((y2-my2)^4)/(n2*sy2^4)-3
g2y1
g2y2
# Std. scores
zy1 <- (130-my1)/sy1
zy2 <- (145-my2)/sy2
zy1
# Std. scores
zy1 <- (145-my1)/sy1
zy2 <- (130-my2)/sy2
zy1
zy2
s2x
98156.0658/20-(32.0323*147.2927)
sxy1
r2xy1
sxy2
r2xy2
reglinxy1
reglinxy2
reglinxy1$coefficients
# Predictions
py1 <- reglinxy1$coefficients[1]+reglinxy1$coefficients[2]*25
py2<- reglinxy2$coefficients[1]+reglinxy2$coefficients[2]*25
py1
py2
# Regression line of x on y
reglinxy1 <- lm(x~y1)
reglinxy1
# Predicton of x
px <- reglinxy1$coefficients[1]+reglinxy1$coefficients[2]*150
px
set.seed(123)
x <- runif(20, 10, 50)
y1 <- 1.5*x+100
y1 <- y1 + rnorm(20, 0, 7)
y2 <- 0.5*x+90
y2 <- y2 + rnorm(20, 0, 2)
## QUESTION/ANSWER GENERATION
# sample size
n <- length(x)
n1 <- length(y1)
n2 <- length(y2)
# means
mx <- mean(x)
my1 <- mean(y1)
my2 <- mean(y2)
# variances
s2x <- sum(x^2)/n-mx^2
s2y1 <- sum(y1^2)/n1-my1^2
s2y2 <- sum(y2^2)/n2-my2^2
# Std. Deviations
sy1 <- sqrt(s2y1)
sy2 <- sqrt(s2y2)
# Coef. Variation
cvy1 <- sy1/my1
cvy2 <- sy2/my2
# Coef. skewness
g1y1 <- sum((y1-my1)^3)/(n1*sy1^3)
g1y2 <- sum((y2-my2)^3)/(n2*sy2^3)
# Coef. kurtosis
g2y1 <- sum((y1-my1)^4)/(n1*sy1^4)-3
g2y2 <- sum((y2-my2)^4)/(n2*sy2^4)-3
# Std. scores
zy1 <- (145-my1)/sy1
zy2 <- (130-my2)/sy2
# Covariances
sxy1 <- sum(x*y1)/n1-mx*my1
sxy2 <- sum(x*y2)/n2-mx*my2
# Determination coeff
r2xy1 <- sxy1^2/(s2x*s2y1)
r2xy2 <- sxy2^2/(s2x*s2y2)
# Regression lines y on x
regliny1x <- lm(y1~x)
regliny2x <- lm(y2~x)
# Predictions of y
py1 <- reglinxy1$coefficients[1]+reglinxy1$coefficients[2]*25
# Predictions of y
py1 <- regliny1x$coefficients[1]+regliny1x$coefficients[2]*25
py2<- regliny2x$coefficients[1]+regliny2x$coefficients[2]*25
# Regression line of x on y
reglinxy1 <- lm(x~y1)
# Predicton of x
px <- reglinxy1$coefficients[1]+reglinxy1$coefficients[2]*150
regliny1x
regliny1x$coefficients
library(knitr)
knit("pharmacy-2018-10-29.Rmd", "pharmacy-2018-10-29.md")
knit("pharmacy-2018-10-29.Rmd", "pharmacy-2018-10-29.md")
knit("pharmacy-2018-10-29.Rmd", "pharmacy-2018-10-29.md")
knit("pharmacy-2018-10-29.Rmd", "pharmacy-2018-10-29.md")
knit("pharmacy-2018-10-29.Rmd", "pharmacy-2018-10-29.md")
knit("pharmacy-2018-10-29.Rmd", "pharmacy-2018-10-29.md")
knit("pharmacy-2018-10-29.Rmd", "pharmacy-2018-10-29.md")
library(knitr)
knit("pharmacy-2018-11-19.Rmd", "pharmacy-2018-11-19.md")
knit("pharmacy-2018-11-19.Rmd", "pharmacy-2018-11-19.md")
knit("pharmacy-2018-11-19.Rmd", "pharmacy-2018-11-19.md")
knit("pharmacy-2018-11-19.Rmd", "pharmacy-2018-11-19.md")
knit("pharmacy-2018-11-19.Rmd", "pharmacy-2018-11-19.md")
knit("pharmacy-2018-11-19.Rmd", "pharmacy-2018-11-19.md")
knit("pharmacy-2018-11-19.Rmd", "pharmacy-2018-11-19.md")
x <- rep(0:9,c(1,3,6,7,8,6,5,2,1,1,))
x <- rep(0:9,c(1,3,6,7,8,6,5,2,1,1))
# SOLUTION
x <- rep(0:9,c(1,3,6,7,8,6,5,2,1,1))
x
data <- data.frame(x)
tab <- frequencyTable(data, "x")
library(knitr)
library(printr)
library(rk.Teaching)
library(rk.Teaching)
options(digits=4, scipen=999)
opts_chunk$set(comment=NA, fig.width=8, fig.height=6, fig.path='img/', fig.align="center", dev="svg", digits=4, echo=FALSE, warning=FALSE, message=FALSE)
# Colors
col1 <- rgb(5,161,230,255,maxColorValue = 255) #0099CC
col1light <- rgb(137,211,243,255,maxColorValue = 255) #89D3F3
col2 <- rgb(238,50,36,255,maxColorValue = 255) #FF3333
col2light <- rgb(238,50,36,100,maxColorValue = 255) #FF3333
tab <- frequencyTable(data, "x")
kable(tab, format="html")
colnames(tab)
colnames(tab)$x
tab <- frequencyTable(data, "x")
colnames(tab)[1] <- "Defective drugs"
kable(tab, format="latex")
kable(tab, format="html")
colnames(tab) <- c("Defective drugs", "n_i", "f_i", "N_i", "F_i")
kable(tab, format="html")
kable(tab, format="latex")
kable(tab, format="latex")
kable(tab, format="latex", table.envir = "array")
kable(tab, format="latex", table.envir = "array")
boxplot(x)
boxplot(x, horizontal = T)
boxplot(x, horizontal = T, col=col1)
?boxplot
data <- data.frame(x)
ggplot(data, aes(x=x)) + geom_boxplot()
ggplot(data, aes(y=x)) + geom_boxplot()
boxplot(x, horizontal = T, col=col1)
data <- data.frame(x)
f.bxp = function(x) {
bxp = c(0,2,4,5,9)
names(bxp) = c("ymin","lower", "middle","upper","ymax")
bxp
}
ggplot(data, aes(y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot")
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot")
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", col=col1)
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1)
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1) + + coord_flip()
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1) + coord_flip()
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=0.5) + coord_flip()
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=1) + coord_flip()
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=2) + coord_flip()
ggplot(data, aes(0, y=x)) + stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=0.1) + coord_flip()
ggplot(data, aes(0, y=x)) +
stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=0.1) +
labs(title="Boxplot of the daily number of defective drugs",x="", y = "Num of defective drugs") + coord_flip()
ggplot(data, aes(0, y=x)) +
stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=0.1) +
scale_x_discrete(limits=0:9) +
labs(title="Boxplot of the daily number of defective drugs",x="", y = "Num of defective drugs") + coord_flip()
ggplot(data, aes(0, y=x)) +
stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=0.1) +
scale_y_discrete(limits=0:9) +
labs(title="Boxplot of the daily number of defective drugs",x="", y = "Num of defective drugs") + coord_flip()
ggplot(data, aes(0, y=x)) +
stat_summary(fun.data=f.bxp, geom="boxplot", fill=col1, width=0.1) +
scale_y_discrete(limits=0:9) +
scale_x_discrete(limits=c()) +
labs(title="Boxplot of the daily number of defective drugs",x="", y = "Num of defective drugs") + coord_flip()
library(knitr)
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
library(knitr)
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
setwd("/media/alf/datos/web/asalber.github.io/estadistica/examenes")
knit("farmacia-2018-12-17.Rmd","farmacia-2018-12-17.md")
knit("farmacia-2018-12-17.Rmd","farmacia-2018-12-17.md")
knit("farmacia-2018-12-17.Rmd","farmacia-2018-12-17.md")
knit("farmacia-2018-12-17.Rmd","farmacia-2018-12-17.md")
knit("farmacia-2018-12-17.Rmd","farmacia-2018-12-17.md")
knit("farmacia-2018-12-17.Rmd","farmacia-2018-12-17.md")
knit("farmacia-2018-12-17.Rmd","farmacia-2018-12-17.md")
setwd("/media/alf/datos/web/asalber.github.io/statistics/exams")
knit("pharmacy-2018-12-17.Rmd","pharmacy-2018-12-17.md")
