<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bucles | Aprende con Alf</title><link>/tag/bucles/</link><atom:link href="/tag/bucles/index.xml" rel="self" type="application/rss+xml"/><description>Bucles</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es-es</language><lastBuildDate>Thu, 01 Jan 1970 00:33:39 +0000</lastBuildDate><image><url>/images/logo_hude38443eeb2faa5fa84365aba7d86a77_3514_300x300_fit_lanczos_3.png</url><title>Bucles</title><link>/tag/bucles/</link></image><item><title>Ejercicios de Bucles</title><link>/docencia/python/ejercicios/bucles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docencia/python/ejercicios/bucles/</guid><description>&lt;h2 id="ejercicio-1">Ejercicio 1&lt;/h2>
&lt;p>Escribir un programa que pida al usuario una palabra y la muestre por pantalla 10 veces.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio1.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-2">Ejercicio 2&lt;/h2>
&lt;p>Escribir un programa que pregunte al usuario su edad y muestre por pantalla todos los años que ha cumplido (desde 1 hasta su edad).&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio2.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-3">Ejercicio 3&lt;/h2>
&lt;p>Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla todos los números impares desde 1 hasta ese número separados por comas.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio3.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-4">Ejercicio 4&lt;/h2>
&lt;p>Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla la cuenta atrás desde ese número hasta cero separados por comas.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio4.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-5">Ejercicio 5&lt;/h2>
&lt;p>Escribir un programa que pregunte al usuario una cantidad a invertir, el interés anual y el número de años, y muestre por pantalla el capital obtenido en la inversión cada año que dura la inversión.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio5.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-6">Ejercicio 6&lt;/h2>
&lt;p>Escribir un programa que pida al usuario un número entero y muestre por pantalla un triángulo rectángulo como el de más abajo, de altura el número introducido.&lt;/p>
&lt;pre>&lt;code class="language-sh">*
**
***
****
*****
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio6.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-7">Ejercicio 7&lt;/h2>
&lt;p>Escribir un programa que muestre por pantalla la tabla de multiplicar del 1 al 10.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio7.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-8">Ejercicio 8&lt;/h2>
&lt;p>Escribir un programa que pida al usuario un número entero y muestre por pantalla un triángulo rectángulo como el de más abajo.&lt;/p>
&lt;pre>&lt;code class="language-sh">1
3 1
5 3 1
7 5 3 1
9 7 5 3 1
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio8.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-9">Ejercicio 9&lt;/h2>
&lt;p>Escribir un programa que almacene la cadena de caracteres &lt;code>contraseña&lt;/code> en una variable, pregunte al usuario por la contraseña hasta que introduzca la contraseña correcta.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio9.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-10">Ejercicio 10&lt;/h2>
&lt;p>Escribir un programa que pida al usuario un número entero y muestre por pantalla si es un número primo o no.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio10.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-11">Ejercicio 11&lt;/h2>
&lt;p>Escribir un programa que pida al usuario una palabra y luego muestre por pantalla una a una las letras de la palabra introducida empezando por la última.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio11.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-12">Ejercicio 12&lt;/h2>
&lt;p>Escribir un programa en el que se pregunte al usuario por una frase y una letra, y muestre por pantalla el número de veces que aparece la letra en la frase.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio12.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p>
&lt;h2 id="ejercicio-13">Ejercicio 13&lt;/h2>
&lt;p>Escribir un programa que muestre el eco de todo lo que el usuario introduzca hasta que el usuario escriba “salir” que terminará.&lt;/p>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio13.ipynb" class="btn btn-info">Solución&lt;/a>&lt;/p></description></item><item><title>Bucles</title><link>/docencia/python/manual/bucles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docencia/python/manual/bucles/</guid><description>&lt;h2 id="bucles-condicionales-while">Bucles condicionales (&lt;code>while&lt;/code>)&lt;/h2>
&lt;blockquote>
&lt;p>&lt;code>while&lt;/code> &lt;em>&lt;code>condición&lt;/code>&lt;/em>&lt;code>:&lt;/code>&lt;br>
    &lt;em>&lt;code>bloque código&lt;/code>&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>Repite la ejecución del bloque de código mientras la expresión lógica &lt;code>condición&lt;/code> sea cierta.&lt;/p>
&lt;p>Se puede interrumpir en cualquier momento la ejecución del bloque de código con la instrucción &lt;code>break&lt;/code>.&lt;/p>
&lt;p>&lt;i class="fa fa-exclamation-triangle" style="color:red;">&lt;/i> &lt;em>El bloque de código debe estar indentado por 4 espacios.&lt;/em>&lt;/p>
&lt;pre>&lt;code class="language-python">&amp;gt;&amp;gt;&amp;gt; # Pregunta al usuario por un número hasta que introduce 0.
&amp;gt;&amp;gt;&amp;gt; num = None
&amp;gt;&amp;gt;&amp;gt; while num != 0:
... num = int(input('Introduce un número: '))
...
Introduce un número: 2
Introduce un número: 1
Introduce un número: 0
&amp;gt;&amp;gt;&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>Alternativa:&lt;/p>
&lt;pre>&lt;code class="language-python">&amp;gt;&amp;gt;&amp;gt; # Pregunta al usuario por un número hasta que introduce 0.
&amp;gt;&amp;gt;&amp;gt; while True:
... num = int(input('Introduce un número: '))
... if num == 0:
... break
...
Introduce un número: 2
Introduce un número: 1
Introduce un número: 0
&amp;gt;&amp;gt;&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="bucles-iterativos-for">Bucles iterativos (&lt;code>for&lt;/code>)&lt;/h2>
&lt;blockquote>
&lt;p>&lt;code>for&lt;/code> &lt;em>&lt;code>i&lt;/code>&lt;/em> &lt;code>in&lt;/code> &lt;em>&lt;code>secuencia&lt;/code>&lt;/em>&lt;code>:&lt;/code>&lt;br>
    &lt;em>&lt;code>bloque código&lt;/code>&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>Repite la ejecución del bloque de código para cada elemento de la secuencia &lt;code>secuencia&lt;/code>, asignado dicho elemento a &lt;code>i&lt;/code> en cada repetición.&lt;/p>
&lt;p>Se puede interrumpir en cualquier momento la ejecución del bloque de código con la instrucción &lt;code>break&lt;/code> o saltar la ejecución para un determinado elemento de la secuencia con la instrucción &lt;code>continue&lt;/code>.&lt;/p>
&lt;p>&lt;i class="fa fa-exclamation-triangle" style="color:red;">&lt;/i> &lt;em>El bloque de código debe estar indentado por 4 espacios.&lt;/em>&lt;/p>
&lt;p>Se utiliza fundamentalmente para recorrer colecciones de objetos como cadenas, listas, tuplas o diccionarios.&lt;/p>
&lt;p>A menudo se usan con la instrucción &lt;code>range&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>range(fin)&lt;/code> : Genera una secuencia de números enteros desde 0 hasta &lt;code>fin-1&lt;/code>.&lt;/li>
&lt;li>&lt;code>range(inicio, fin, salto)&lt;/code> : Genera una secuencia de números enteros desde &lt;code>inicio&lt;/code> hasta &lt;code>fin-1&lt;/code> con un incremento de &lt;code>salto&lt;/code>.&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-python">&amp;gt;&amp;gt;&amp;gt; palabra = 'Python'
&amp;gt;&amp;gt;&amp;gt; for letra in palabra:
... print(letra)
...
P
y
t
h
o
n
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-python">&amp;gt;&amp;gt;&amp;gt; for i in range(1, 10, 2):
... print(i, end=&amp;quot;, &amp;quot;)
...
1, 3, 5, 7, 9, &amp;gt;&amp;gt;&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>Estrellas regulares</title><link>/docencia/python/retos/estrellas-regulares/</link><pubDate>Thu, 01 Jan 1970 00:33:39 +0000</pubDate><guid>/docencia/python/retos/estrellas-regulares/</guid><description>&lt;h2 id="tarea">Tarea&lt;/h2>
&lt;p>El reto consiste en programar una función que dibuje estrellas como la que aparece a continuación con un número de puntas dado.&lt;/p>
&lt;p>&lt;img src="../img/estrella.png" alt="Estrella">&lt;/p>
&lt;p>Para ello hay que utilizar el módulo de Python
&lt;a href="https://docs.python.org/3/library/turtle.html" target="_blank" rel="noopener">Turtle&lt;/a> que permite realizar trazos sencillos en una ventana gráfica.&lt;/p>
&lt;p>En el siguiente video hay una introducción básica al módulo Turtle.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/cX9efszLbJw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>Y también dispones de una
&lt;a href="doc/PythonTurtle-cheatsheet.pdf">hoja de resumen con las principales funciones de Turtle&lt;/a>.&lt;/p>
&lt;h2 id="solución">Solución&lt;/h2>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/retos/soluciones/dibujo-estrellas-turtle.ipynb" class="btn btn-info" target="_blank">Solución&lt;/a>&lt;/p></description></item><item><title>Laberinto</title><link>/docencia/python/retos/laberinto/</link><pubDate>Thu, 01 Jan 1970 00:33:39 +0000</pubDate><guid>/docencia/python/retos/laberinto/</guid><description>&lt;h2 id="tarea-1">Tarea 1&lt;/h2>
&lt;p>La primera tarea consiste en construir un laberinto como el de la siguiente figura.&lt;/p>
&lt;p>&lt;img src="../img/laberinto.png" alt="Laberinto">&lt;/p>
&lt;p>El laberinto se representará como una una lista de listas, donde cada lista es una fila del laberinto y cada casilla se representará con un espacio ' ' si hay paso o con la letra &amp;lsquo;X&amp;rsquo; si hay un muro, tal y como se muestra a continuación:&lt;/p>
&lt;pre>&lt;code class="language-Python">laberinto = [
[' ', 'X', 'X', 'X', 'X'],
[' ', 'X', ' ', ' ', ' '],
[' ', 'X', ' ', 'X', ' '],
[' ', ' ', ' ', 'X', ' '],
['X', 'X', 'X', 'X', 'S']
]
&lt;/code>&lt;/pre>
&lt;p>El laberinto se debe crear a partir de una tupla con las coordenadas de las casillas donde hay muro, como la siguiente:&lt;/p>
&lt;pre>&lt;code class="language-Python">muro = ((0,1), (0,2), (0,3), (0,4), (1,1), (2,1), (2,3), (3,3), (4,0), (4,1), (4,2), (4,3))
&lt;/code>&lt;/pre>
&lt;h2 id="tarea-2">Tarea 2&lt;/h2>
&lt;p>La segunda tarea a resolver consiste en construir un programa para recorrer el laberinto desde la entrada a la salida. La entrada siempre está en la esquina superior izquierda y la salida en la esquina inferior derecha.&lt;/p>
&lt;p>El programa debe devolver una lista con la secuencia de movimientos para ir de la entrada a la salida del laberinto, tal y como se muestra a continuación:&lt;/p>
&lt;pre>&lt;code class="language-Python">['Abajo', 'Abajo', 'Abajo', 'Abajo', 'Derecha', 'Derecha', 'Arriba', 'Arriba', 'Derecha', 'Derecha', 'Abajo', 'Abajo', 'Abajo']
&lt;/code>&lt;/pre>
&lt;h2 id="solución">Solución&lt;/h2>
&lt;p>&lt;a href="https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/retos/soluciones/laberinto.ipynb" class="btn btn-info" target="_blank">Solución&lt;/a>&lt;/p></description></item></channel></rss>