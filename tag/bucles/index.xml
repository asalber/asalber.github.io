<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bucles | Aprende con Alf</title>
    <link>/tag/bucles/</link>
      <atom:link href="/tag/bucles/index.xml" rel="self" type="application/rss+xml" />
    <description>Bucles</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es-es</language><lastBuildDate>Thu, 01 Jan 1970 01:33:39 +0100</lastBuildDate>
    <image>
      <url>/images/logo_hude38443eeb2faa5fa84365aba7d86a77_3514_300x300_fit_lanczos_3.png</url>
      <title>Bucles</title>
      <link>/tag/bucles/</link>
    </image>
    
    <item>
      <title>Ejercicios de Bucles</title>
      <link>/docencia/python/ejercicios/bucles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/bucles/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario una palabra y la muestre por pantalla 10 veces.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario su edad y muestre por pantalla todos los años que ha cumplido (desde 1 hasta su edad).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla todos los números impares desde 1 hasta ese número separados por comas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla la cuenta atrás desde ese número hasta cero separados por comas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario una cantidad a invertir, el interés anual y el número de años, y muestre por pantalla el capital obtenido en la inversión cada año que dura la inversión.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero y muestre por pantalla un triángulo rectángulo como el de más abajo, de altura el número introducido.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;*
**
***
****
*****
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir un programa que muestre por pantalla la tabla de multiplicar del 1 al 10.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero y muestre por pantalla un triángulo rectángulo como el de más abajo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;1
3 1
5 3 1
7 5 3 1
9 7 5 3 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene la cadena de caracteres &lt;code&gt;contraseña&lt;/code&gt; en una variable, pregunte al usuario por la contraseña hasta que introduzca la contraseña correcta.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero y muestre por pantalla si es un número primo o no.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario una palabra y luego muestre por pantalla una a una las letras de la palabra introducida empezando por la última.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-12&#34;&gt;Ejercicio 12&lt;/h2&gt;
&lt;p&gt;Escribir un programa en el que se pregunte al usuario por una frase y una letra, y muestre por pantalla el número de veces que aparece la letra en la frase.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio12.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-13&#34;&gt;Ejercicio 13&lt;/h2&gt;
&lt;p&gt;Escribir un programa que muestre el eco de todo lo que el usuario introduzca hasta que el usuario escriba “salir” que terminará.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio13.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bucles</title>
      <link>/docencia/python/manual/bucles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/manual/bucles/</guid>
      <description>&lt;h2 id=&#34;bucles-condicionales-while&#34;&gt;Bucles condicionales (&lt;code&gt;while&lt;/code&gt;)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;while&lt;/code&gt; &lt;em&gt;&lt;code&gt;condición&lt;/code&gt;&lt;/em&gt;&lt;code&gt;:&lt;/code&gt;&lt;br&gt;
    &lt;em&gt;&lt;code&gt;bloque código&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Repite la ejecución del bloque de código mientras la expresión lógica &lt;code&gt;condición&lt;/code&gt; sea cierta.&lt;/p&gt;
&lt;p&gt;Se puede interrumpir en cualquier momento la ejecución del bloque de código con la instrucción &lt;code&gt;break&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fa fa-exclamation-triangle&#34; style=&#34;color:red;&#34;&gt;&lt;/i&gt; &lt;em&gt;El bloque de código debe estar indentado por 4 espacios.&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; # Pregunta al usuario por un número hasta que introduce 0.
&amp;gt;&amp;gt;&amp;gt; num = None
&amp;gt;&amp;gt;&amp;gt; while num != 0:
...     num = int(input(&#39;Introduce un número: &#39;))
... 
Introduce un número: 2
Introduce un número: 1
Introduce un número: 0
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternativa:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; # Pregunta al usuario por un número hasta que introduce 0.
&amp;gt;&amp;gt;&amp;gt; while True:
...     num = int(input(&#39;Introduce un número: &#39;))
...     if num == 0:
...         break
...
Introduce un número: 2
Introduce un número: 1
Introduce un número: 0
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;bucles-iterativos-for&#34;&gt;Bucles iterativos (&lt;code&gt;for&lt;/code&gt;)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;for&lt;/code&gt; &lt;em&gt;&lt;code&gt;i&lt;/code&gt;&lt;/em&gt; &lt;code&gt;in&lt;/code&gt; &lt;em&gt;&lt;code&gt;secuencia&lt;/code&gt;&lt;/em&gt;&lt;code&gt;:&lt;/code&gt;&lt;br&gt;
    &lt;em&gt;&lt;code&gt;bloque código&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Repite la ejecución del bloque de código para cada elemento de la secuencia &lt;code&gt;secuencia&lt;/code&gt;, asignado dicho elemento a &lt;code&gt;i&lt;/code&gt; en cada repetición.&lt;/p&gt;
&lt;p&gt;Se puede interrumpir en cualquier momento la ejecución del bloque de código con la instrucción &lt;code&gt;break&lt;/code&gt; o saltar la ejecución para un determinado elemento de la secuencia con la instrucción &lt;code&gt;continue&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;i class=&#34;fa fa-exclamation-triangle&#34; style=&#34;color:red;&#34;&gt;&lt;/i&gt; &lt;em&gt;El bloque de código debe estar indentado por 4 espacios.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Se utiliza fundamentalmente para recorrer colecciones de objetos como cadenas, listas, tuplas o diccionarios.&lt;/p&gt;
&lt;p&gt;A menudo se usan con la instrucción &lt;code&gt;range&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;range(fin)&lt;/code&gt; : Genera una secuencia de números enteros desde 0 hasta &lt;code&gt;fin-1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;range(inicio, fin, salto)&lt;/code&gt; : Genera una secuencia de números enteros desde &lt;code&gt;inicio&lt;/code&gt; hasta &lt;code&gt;fin-1&lt;/code&gt; con un incremento de &lt;code&gt;salto&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; palabra = &#39;Python&#39;
&amp;gt;&amp;gt;&amp;gt; for letra in palabra:
...     print(letra)
... 
P
y
t
h
o
n
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; for i in range(1, 10, 2):
...     print(i, end=&amp;quot;, &amp;quot;)
...
1, 3, 5, 7, 9, &amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Estrellas regulares</title>
      <link>/docencia/python/retos/estrellas-regulares/</link>
      <pubDate>Thu, 01 Jan 1970 01:33:39 +0100</pubDate>
      <guid>/docencia/python/retos/estrellas-regulares/</guid>
      <description>&lt;h2 id=&#34;tarea&#34;&gt;Tarea&lt;/h2&gt;
&lt;p&gt;El reto consiste en programar una función que dibuje estrellas como la que aparece a continuación con un número de puntas dado.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../img/estrella.png&#34; alt=&#34;Estrella&#34;&gt;&lt;/p&gt;
&lt;p&gt;Para ello hay que utilizar el módulo de Python 
&lt;a href=&#34;https://docs.python.org/3/library/turtle.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Turtle&lt;/a&gt; que permite realizar trazos sencillos en una ventana gráfica.&lt;/p&gt;
&lt;p&gt;En el siguiente video hay una introducción básica al módulo Turtle.&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/cX9efszLbJw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;Y también dispones de una 
&lt;a href=&#34;doc/PythonTurtle-cheatsheet.pdf&#34;&gt;hoja de resumen con las principales funciones de Turtle&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;solución&#34;&gt;Solución&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/retos/soluciones/dibujo-estrellas-turtle.ipynb&#34; class=&#34;btn btn-info&#34; target=&#34;_blank&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Laberinto</title>
      <link>/docencia/python/retos/laberinto/</link>
      <pubDate>Thu, 01 Jan 1970 01:33:39 +0100</pubDate>
      <guid>/docencia/python/retos/laberinto/</guid>
      <description>&lt;h2 id=&#34;tarea-1&#34;&gt;Tarea 1&lt;/h2&gt;
&lt;p&gt;La primera tarea consiste en construir un laberinto como el de la siguiente figura.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../img/laberinto.png&#34; alt=&#34;Laberinto&#34;&gt;&lt;/p&gt;
&lt;p&gt;El laberinto se representará como una una lista de listas, donde cada lista es una fila del laberinto y cada casilla se representará con un espacio &amp;rsquo; &amp;rsquo; si hay paso o con la letra &amp;lsquo;X&amp;rsquo; si hay un muro, tal y como se muestra a continuación:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;laberinto = [
    [&#39; &#39;, &#39;X&#39;, &#39;X&#39;, &#39;X&#39;, &#39;X&#39;], 
    [&#39; &#39;, &#39;X&#39;, &#39; &#39;, &#39; &#39;, &#39; &#39;],
    [&#39; &#39;, &#39;X&#39;, &#39; &#39;, &#39;X&#39;, &#39; &#39;], 
    [&#39; &#39;, &#39; &#39;, &#39; &#39;, &#39;X&#39;, &#39; &#39;], 
    [&#39;X&#39;, &#39;X&#39;, &#39;X&#39;, &#39;X&#39;, &#39;S&#39;]
    ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El laberinto se debe crear a partir de una tupla con las coordenadas de las casillas donde hay muro, como la siguiente:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;muro = ((0,1), (0,2), (0,3), (0,4), (1,1), (2,1), (2,3), (3,3), (4,0), (4,1), (4,2), (4,3))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;tarea-2&#34;&gt;Tarea 2&lt;/h2&gt;
&lt;p&gt;La segunda tarea a resolver consiste en construir un programa para recorrer el laberinto desde la entrada a la salida. La entrada siempre está en la esquina superior izquierda y la salida en la esquina inferior derecha.&lt;/p&gt;
&lt;p&gt;El programa debe devolver una lista con la secuencia de movimientos para ir de la entrada a la salida del laberinto, tal y como se muestra a continuación:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;[&#39;Abajo&#39;, &#39;Abajo&#39;, &#39;Abajo&#39;, &#39;Abajo&#39;, &#39;Derecha&#39;, &#39;Derecha&#39;, &#39;Arriba&#39;, &#39;Arriba&#39;, &#39;Derecha&#39;, &#39;Derecha&#39;, &#39;Abajo&#39;, &#39;Abajo&#39;, &#39;Abajo&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;solución&#34;&gt;Solución&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/retos/soluciones/laberinto.ipynb&#34; class=&#34;btn btn-info&#34; target=&#34;_blank&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
