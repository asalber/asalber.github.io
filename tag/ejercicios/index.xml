<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ejercicios | Aprende con Alf</title>
    <link>/tag/ejercicios/</link>
      <atom:link href="/tag/ejercicios/index.xml" rel="self" type="application/rss+xml" />
    <description>Ejercicios</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>es-es</language>
    <image>
      <url>/images/logo_hude38443eeb2faa5fa84365aba7d86a77_3514_300x300_fit_lanczos_3.png</url>
      <title>Ejercicios</title>
      <link>/tag/ejercicios/</link>
    </image>
    
    <item>
      <title>Ejercicios de creación y actualización de repositorios</title>
      <link>/docencia/git/ejercicios/creacion-actualizacion-repositorios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/git/ejercicios/creacion-actualizacion-repositorios/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Configurar Git definiendo el nombre del usuario, el correo electrónico y activar el coloreado de la salida. Mostrar la configuración final.&lt;/p&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-0&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-0&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-0&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git config --global user.name &amp;quot;Your-Full-Name&amp;quot;
&amp;gt; git config --global user.email &amp;quot;your-email-address&amp;quot;
&amp;gt; git config --global color.ui auto
&amp;gt; git config --list
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-1&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-1&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-1&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/creacion-actualizacion-repositorios/ejercicio1.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Crear un repositorio nuevo con el nombre &lt;code&gt;libro&lt;/code&gt; y mostrar su contenido.&lt;/p&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-2&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-2&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-2&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; mkdir libro
&amp;gt; cd libro
&amp;gt; git init
&amp;gt; ls -la
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-3&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-3&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-3&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/creacion-actualizacion-repositorios/ejercicio2.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Comprobar el estado del repositorio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Crear un fichero &lt;code&gt;indice.txt&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Capítulo 1: Introducción a Git&lt;br&gt;
Capítulo 2: Flujo de trabajo básico&lt;br&gt;
Capítulo 3: Repositorios remotos&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comprobar de nuevo el estado del repositorio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Añadir el fichero a la zona de intercambio temporal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Volver a comprobar una vez más el estado del repositorio.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-4&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-4&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-4&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git status
&amp;gt; cat &amp;gt; indice.txt
Capítulo 1: Introducción a Git
Capítulo 2: Flujo de trabajo básico
Capítulo 3: Repositorios remotos
Ctrl+D
&amp;gt; git status
&amp;gt; git add indice.txt
&amp;gt; git status
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-5&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-5&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-5&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/creacion-actualizacion-repositorios/ejercicio3.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Realizar un commit de los últimos cambios con el mensaje &amp;ldquo;Añadido índice del libro.&amp;rdquo; y ver el estado del repositorio.&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-6&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-6&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-6&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git commit -m &amp;quot;Añadido índice del libro.&amp;quot;
&amp;gt; git status
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-7&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-7&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-7&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/creacion-actualizacion-repositorios/ejercicio4.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Cambiar el fichero &lt;code&gt;indice.txt&lt;/code&gt; para que contenga lo siguiente:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Capítulo 1: Introducción a Git&lt;br&gt;
Capítulo 2: Flujo de trabajo básico&lt;br&gt;
Capítulo 3: Gestión de ramas&lt;br&gt;
Capítulo 4: Repositorios remotos&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mostrar los cambios con respecto a la última versión guardada en el repositorio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hacer un commit de los cambios con el mensaje &amp;ldquo;Añadido capítulo 3 sobre gestión de ramas&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-8&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-8&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-8&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; cat &amp;gt; indice.txt
Capítulo 1: Introducción a Git
Capítulo 2: Flujo de trabajo básico
Capítulo 3: Gestión de ramas
Capítulo 4: Repositorios remotos
Ctrl+D
&amp;gt; git diff
&amp;gt; git add indice.txt
&amp;gt; git commit -m &amp;quot;Añadido capítulo 3 sobre gestión de ramas&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-9&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-9&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-9&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/creacion-actualizacion-repositorios/ejercicio5.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Mostrar los cambios de la última versión del repositorio con respecto a la anterior.&lt;/li&gt;
&lt;li&gt;Cambiar el mensaje del último commit por &amp;ldquo;Añadido capítulo 3 sobre gestión de ramas al índice.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Volver a mostrar los últimos cambios del repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-10&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-10&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-10&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git show
&amp;gt; git commit --amend -m &amp;quot;Añadido capítulo 3 sobre gestión de ramas al índice.&amp;quot;
git show
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-11&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-11&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-11&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/creacion-actualizacion-repositorios/ejercicio6.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Tipos de Datos Simples</title>
      <link>/docencia/python/ejercicios/tipos-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/tipos-datos/</guid>
      <description>&lt;!-- Datacamp light
&lt;script async type=&#34;text/javascript&#34; src=&#34;https://cdn.datacamp.com/dcl-react-dev.js.gz&#34;&gt;&lt;/script&gt;  
--&gt;
&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que muestre por pantalla la cadena &lt;code&gt;¡Hola Mundo!&lt;/code&gt;.&lt;/p&gt;
&lt;!-- &lt;div&gt;&lt;button class=&#34;resolution&#34;&gt;Resolver&lt;/button&gt;&lt;/div&gt;
&lt;div data-datacamp-exercise data-lang=&#34;python&#34; id=&#34;solution&#34; style=&#34;display: none&#34;&gt;

  &lt;code data-type=&#34;sample-code&#34;&gt;
    # Mostrar por pantalla la cadena &#34;¡Hola mundo!&#34;

  &lt;/code&gt;

  &lt;code data-type=&#34;solution&#34;&gt;
  # Mostrar por pantalla la cadena &#34;¡Hola mundo!&#34;
  print(&#34;¡Hola mundo!&#34;)
  &lt;/code&gt;
  
  &lt;code data-type=&#34;sct&#34;&gt;

  Ex().multi(
    check_function(&#34;print&#34;),
    has_output(&#34;¡Hola mundo!&#34;, pattern = False)
  )
  success_msg(&#34;¡Correcto!&#34;)
  &lt;/code&gt;
  
  &lt;div data-type=&#34;hint&#34;&gt;
    Usa la función &lt;code&gt;print&lt;/code&gt; para mostrar cadenas por pantalla.
  &lt;/div&gt;
&lt;/div&gt; --&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene la cadena &lt;code&gt;¡Hola Mundo!&lt;/code&gt; en una variable y luego muestre por pantalla el contenido de la variable.&lt;/p&gt;
&lt;!-- &lt;div&gt;&lt;button class=&#34;resolution&#34;&gt;Resolver&lt;/button&gt;&lt;/div&gt;
&lt;div data-datacamp-exercise data-lang=&#34;python&#34; id=&#34;solution&#34; style=&#34;display: none&#34;&gt;

  &lt;code data-type=&#34;sample-code&#34;&gt;
    # Guardar la cadena &#34;¡Hola mundo!&#34; en la variable a

    # Mostrar por pantalla contenido de la variable a

  &lt;/code&gt;

  &lt;code data-type=&#34;solution&#34;&gt;
    # Guardar la cadena &#34;¡Hola mundo!&#34; en la variable a
    a = &#34;¡Hola mundo!&#34;

    # Mostrar por pantalla contenido de la variable a  
    print(a)
    &lt;/code&gt;
  
  &lt;code data-type=&#34;sct&#34;&gt;
    Ex().multi(
      check_object(&#34;a&#34;).has_equal_value(),
      check_function(&#34;print&#34;),
      has_output(&#34;¡Hola mundo!&#34;, pattern = False)
    )
    success_msg(&#34;¡Correcto!&#34;)
  &lt;/code&gt;
  
  &lt;div data-type=&#34;hint&#34;&gt;
    Usa el símbolo `=` para asignar un valor a una variable y la función &lt;code&gt;print&lt;/code&gt; para mostrar el contenido de la variable por pantalla.
  &lt;/div&gt;
&lt;/div&gt; --&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte el nombre del usuario en la consola y después de que el usuario lo introduzca muestre por pantalla la cadena &lt;code&gt;¡Hola &amp;lt;nombre&amp;gt;!&lt;/code&gt;, donde &lt;code&gt;&amp;lt;nombre&amp;gt;&lt;/code&gt; es el nombre que el usuario haya introducido.&lt;/p&gt;
&lt;!-- &lt;div&gt;&lt;button class=&#34;resolution&#34;&gt;Resolver&lt;/button&gt;&lt;/div&gt;
&lt;div data-datacamp-exercise data-lang=&#34;python&#34; id=&#34;solution&#34; style=&#34;display: none&#34;&gt;

&lt;code data-type=&#34;pre-exercise-code&#34;&gt;
    import sys
    from io import StringIO
    sys.stdin = StringIO(&#34;input\n&#34;)
    del sys
&lt;/code&gt;

  &lt;code data-type=&#34;sample-code&#34;&gt;
    # Preguntar el nombre del usuario y guardarlo en la variable nombre

    # Mostrar por pantalla el saludo con el nombre

  &lt;/code&gt;

  &lt;code data-type=&#34;solution&#34;&gt;
    # Preguntar el nombre del usuario y guardarlo en la variable nombre
    nombre = input(&#34;¿Cómo te llamas?&#34;)
    # Mostrar por pantalla el saludo con el nombre
    print(&#34;Hola &#34; + nombre + &#34;!&#34;)
  &lt;/code&gt;
  
  &lt;code data-type=&#34;sct&#34;&gt;
    Ex().multi(
      check_function(&#34;input&#34;),
      check_object(&#34;nombre&#34;),
      check_function(&#34;print&#34;),
      has_output(&#34;¡Hola \w+!&#34;)
    )
    success_msg(&#34;¡Correcto!&#34;)
  &lt;/code&gt;
  
  &lt;div data-type=&#34;hint&#34;&gt;
    Usa la función &lt;code&gt;input&lt;/code&gt; para leer una cadena desde la terminal, el símbolo `=` para asignar la cadena a la variable y la función &lt;code&gt;print&lt;/code&gt; para mostrar el saludo por pantalla.
  &lt;/div&gt;
&lt;/div&gt; --&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir un programa que muestre por pantalla el resultado de la siguiente operación aritmética $\left(\frac{3+2}{2\cdot 5}\right)^2$.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario por el número de horas trabajadas y el coste por hora.
Después debe mostrar por pantalla la paga que le corresponde.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir un programa que lea un entero positivo, $n$, introducido por el usuario y después muestre en pantalla la suma de todos los enteros desde 1 hasta $n$.
La suma de los $n$ primeros enteros positivos puede ser calculada de la siguiente forma:&lt;/p&gt;
&lt;p&gt;$$ \mbox{suma} = \frac{n(n+1)}{2} $$&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario su peso (en kg) y estatura (en metros), calcule el índice de masa corporal y lo almacene en una variable, y muestre por pantalla la frase &lt;code&gt;Tu índice de masa corporal es &amp;lt;imc&amp;gt;&lt;/code&gt; donde &lt;code&gt;&amp;lt;imc&amp;gt;&lt;/code&gt; es el índice de masa corporal calculado redondeado con dos decimales.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario dos números enteros y muestre por pantalla la &lt;code&gt;&amp;lt;n&amp;gt; entre &amp;lt;m&amp;gt; da un cociente &amp;lt;c&amp;gt; y un resto &amp;lt;r&amp;gt;&lt;/code&gt; donde &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;m&amp;gt;&lt;/code&gt; son los números introducidos por el usuario, y &lt;code&gt;&amp;lt;c&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;r&amp;gt;&lt;/code&gt; son el cociente y el resto de la división entera respectivamente.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario una cantidad a invertir, el interés anual y el número de años, y muestre por pantalla el capital obtenido en la inversión.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Una juguetería tiene mucho éxito en dos de sus productos: payasos y muñecas.
Suele hacer venta por correo y la empresa de logística les cobra por peso de cada paquete así que deben calcular el peso de los payasos y muñecas que saldrán en cada paquete a demanda. Cada payaso pesa 112 g y cada muñeca 75 g.
Escribir un programa que lea el número de payasos y muñecas vendidos en el último pedido y calcule el peso total del paquete que será enviado.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;Imagina que acabas de abrir una nueva cuenta de ahorros que te ofrece el 4% de interés al año. Estos ahorros debido a intereses, que no se cobran hasta finales de año, se te añaden al balance final de tu cuenta de ahorros.
Escribir un programa que comience leyendo la cantidad de dinero depositada en la cuenta de ahorros, introducida por el usuario. Después el programa debe calcular y mostrar por pantalla la cantidad de ahorros tras el primer, segundo y tercer años.
Redondear cada cantidad a dos decimales.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-12&#34;&gt;Ejercicio 12&lt;/h2&gt;
&lt;p&gt;Una panadería vende barras de pan a 3.49€ cada una. El pan que no es el día tiene un descuento del 60%.
Escribir un programa que comience leyendo el número de barras vendidas que no son del día. Después el programa debe mostrar el precio habitual de una barra de pan, el descuento que se le hace por no ser fresca y el coste final total.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio12.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Tipos de Datos Simples</title>
      <link>/docencia/r/ejercicios/tipos-datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/r/ejercicios/tipos-datos/</guid>
      <description>&lt;!-- Datacamp light
&lt;script async type=&#34;text/javascript&#34; src=&#34;https://cdn.datacamp.com/dcl-react-dev.js.gz&#34;&gt;&lt;/script&gt;  
--&gt;
&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que muestre por pantalla la cadena &lt;code&gt;¡Hola Mundo!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/r/ejercicios/soluciones/tipos-datos/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;!-- ## Ejercicio 2

Escribir un programa que almacene la cadena `¡Hola Mundo!` en una variable y luego muestre por pantalla el contenido de la variable.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 3

Escribir un programa que pregunte el nombre del usuario en la consola y después de que el usuario lo introduzca muestre por pantalla la cadena `¡Hola &lt;nombre&gt;!`, donde `&lt;nombre&gt;` es el nombre que el usuario haya introducido.


&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;


## Ejercicio 4

Escribir un programa que muestre por pantalla el resultado de la siguiente operación aritmética $\left(\frac{3+2}{2\cdot 5}\right)^2$.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 5

Escribir un programa que pregunte al usuario por el número de horas trabajadas y el coste por hora.
Después debe mostrar por pantalla la paga que le corresponde.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 6

Escribir un programa que lea un entero positivo, $n$, introducido por el usuario y después muestre en pantalla la suma de todos los enteros desde 1 hasta $n$.
La suma de los $n$ primeros enteros positivos puede ser calculada de la siguiente forma:

$$ \mbox{suma} = \frac{n(n+1)}{2} $$

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 7

Escribir un programa que pida al usuario su peso (en kg) y estatura (en metros), calcule el índice de masa corporal y lo almacene en una variable, y muestre por pantalla la frase `Tu índice de masa corporal es &lt;imc&gt;` donde `&lt;imc&gt;` es el índice de masa corporal calculado redondeado con dos decimales.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 8

Escribir un programa que pida al usuario dos números enteros y muestre por pantalla la `&lt;n&gt; entre &lt;m&gt; da un cociente &lt;c&gt; y un resto &lt;r&gt;` donde `&lt;n&gt;` y `&lt;m&gt;` son los números introducidos por el usuario, y `&lt;c&gt;` y `&lt;r&gt;` son el cociente y el resto de la división entera respectivamente.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 9

Escribir un programa que pregunte al usuario una cantidad a invertir, el interés anual y el número de años, y muestre por pantalla el capital obtenido en la inversión.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 10

Una juguetería tiene mucho éxito en dos de sus productos: payasos y muñecas.
Suele hacer venta por correo y la empresa de logística les cobra por peso de cada paquete así que deben calcular el peso de los payasos y muñecas que saldrán en cada paquete a demanda. Cada payaso pesa 112 g y cada muñeca 75 g.
Escribir un programa que lea el número de payasos y muñecas vendidos en el último pedido y calcule el peso total del paquete que será enviado.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 11

Imagina que acabas de abrir una nueva cuenta de ahorros que te ofrece el 4% de interés al año. Estos ahorros debido a intereses, que no se cobran hasta finales de año, se te añaden al balance final de tu cuenta de ahorros.
Escribir un programa que comience leyendo la cantidad de dinero depositada en la cuenta de ahorros, introducida por el usuario. Después el programa debe calcular y mostrar por pantalla la cantidad de ahorros tras el primer, segundo y tercer años.
Redondear cada cantidad a dos decimales.  

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;

## Ejercicio 12

Una panadería vende barras de pan a 3.49€ cada una. El pan que no es el día tiene un descuento del 60%.
Escribir un programa que comience leyendo el número de barras vendidas que no son del día. Después el programa debe mostrar el precio habitual de una barra de pan, el descuento que se le hace por no ser fresca y el coste final total.

&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/tipos-datos/ejercicio12.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt; --&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Cadenas</title>
      <link>/docencia/python/ejercicios/cadenas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/cadenas/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte el nombre del usuario en la consola y un número entero e imprima por pantalla en líneas distintas el nombre del usuario tantas veces como el número introducido.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte el nombre completo del usuario en la consola y después muestre por pantalla el nombre completo del usuario tres veces, una con todas las letras minúsculas, otra con todas las letras mayúsculas y otra solo con la primera letra del nombre y de los apellidos en mayúscula. El usuario puede introducir su nombre combinando mayúsculas y minúsculas como quiera.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte el nombre del usuario en la consola y después de que el usuario lo introduzca muestre por pantalla &lt;code&gt;&amp;lt;NOMBRE&amp;gt; tiene &amp;lt;n&amp;gt; letras&lt;/code&gt;, donde &lt;code&gt;&amp;lt;NOMBRE&amp;gt;&lt;/code&gt; es el nombre de usuario en mayúsculas y &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; es el número de letras que tienen el nombre.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Los teléfonos de una empresa tienen el siguiente formato &lt;code&gt;prefijo-número-extension&lt;/code&gt; donde el prefijo es el código del país &lt;code&gt;+34&lt;/code&gt;, y la extensión tiene dos dígitos (por ejemplo &lt;code&gt;+34-913724710-56&lt;/code&gt;). Escribir un programa que pregunte por un número de teléfono con este formato y muestre por pantalla el número de teléfono sin el prefijo y la extensión.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario que introduzca una frase en la consola y muestre por pantalla la frase invertida.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario que introduzca una frase en la consola y una vocal, y después muestre por pantalla la misma frase pero con la vocal introducida en mayúscula.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte el correo electrónico del usuario en la consola y muestre por pantalla otro correo electrónico con el mismo nombre (la parte delante de la arroba &lt;code&gt;@&lt;/code&gt;) pero con dominio &lt;code&gt;ceu.es&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte por consola el precio de un producto en euros con dos decimales y muestre por pantalla el número de euros y el número de céntimos del precio introducido.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario la fecha de su nacimiento en formato &lt;code&gt;dd/mm/aaaa&lt;/code&gt; y muestra por pantalla, el día, el mes y el año. Adaptar el programa anterior para que también funcione cuando el día o el mes se introduzcan con un solo carácter.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte por consola por los productos de una cesta de la compra, separados por comas, y muestre por pantalla cada uno de los productos en una línea distinta.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte el nombre el un producto, su precio y un número de unidades y muestre por pantalla una cadena con el nombre del producto seguido de su precio unitario con 6 dígitos enteros y 2 decimales, el número de unidades con tres dígitos y el coste total con 8 dígitos enteros y 2 decimales.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/cadenas/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Condicionales</title>
      <link>/docencia/python/ejercicios/condicionales/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/condicionales/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario su edad y muestre por pantalla si es mayor de edad o no.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene la cadena de caracteres &lt;code&gt;contraseña&lt;/code&gt; en una variable, pregunte al usuario por la contraseña e imprima por pantalla si la contraseña introducida por el usuario coincide con la guardada en la variable sin tener en cuenta mayúsculas y minúsculas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario dos números y muestre por pantalla su división. Si el divisor es cero el programa debe mostrar un error.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero y muestre por pantalla si es par o impar.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Para tributar un determinado impuesto se debe ser mayor de 16 años y tener unos ingresos iguales o superiores a 1000 € mensuales.
Escribir un programa que pregunte al usuario su edad y sus ingresos mensuales y muestre por pantalla si el usuario tiene que tributar o no.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Los alumnos de un curso se han dividido en dos grupos A y B de acuerdo al sexo y el nombre. El grupo A esta formado por las mujeres con un nombre anterior a la M y los hombres con un nombre posterior a la N y el grupo B por el resto.
Escribir un programa que pregunte al usuario su nombre y sexo, y muestre por pantalla el grupo que le corresponde.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Los tramos impositivos para la declaración de la renta en un determinado país son los siguientes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Renta&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Tipo impositivo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Menos de 10000€&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Entre 10000€ y 20000€&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;15%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Entre 20000€ y 35000€&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;20%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Entre 35000€ y 60000€&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;30%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Más de 60000€&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;45%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario su renta anual y muestre por pantalla el tipo impositivo que le corresponde.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;En una determinada empresa, sus empleados son evaluados al final de cada año. Los puntos que pueden obtener en la evaluación comienzan en 0.0 y pueden ir aumentando, traduciéndose en mejores beneficios.
Los puntos que pueden conseguir los empleados pueden ser 0.0, 0.4, 0.6 o más, pero no valores intermedios entre las cifras mencionadas.
A continuación se muestra una tabla con los niveles correspondientes a cada puntuación.
La cantidad de dinero conseguida en cada nivel es de 2.400€ multiplicada por la puntuación del nivel.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Nivel&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Puntuación&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Inaceptable&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Aceptable&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Meritorio&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.6 o más&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Escribir un programa que lea la puntuación del usuario e indique su nivel de rendimiento, así como la cantidad de dinero que recibirá el usuario.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir un programa para una empresa que tiene salas de juegos para todas las edades y quiere calcular de forma automática el precio que debe cobrar a sus clientes por entrar.
El programa debe preguntar al usuario la edad del cliente y mostrar el precio de la entrada.
Si el cliente es menor de 4 años puede entrar gratis, si tiene entre 4 y 18 años debe pagar 5€ y si es mayor de 18 años, 10€.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;La pizzería Bella Napoli ofrece pizzas vegetarianas y no vegetarianas a sus clientes.
Los ingredientes para cada tipo de pizza aparecen a continuación.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ingredientes vegetarianos: Pimiento y tofu.&lt;/li&gt;
&lt;li&gt;Ingredientes no vegetarianos: Peperoni, Jamón y Salmón.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario si quiere una pizza vegetariana o no, y en función de su respuesta le muestre un menú con los ingredientes disponibles para que elija.
Solo se puede eligir un ingrediente además de la mozzarella y el tomate que están en todas la pizzas.
Al final se debe mostrar por pantalla si la pizza elegida es vegetariana o no y todos los ingredientes que lleva.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/condicionales/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de manejo del historial de cambios</title>
      <link>/docencia/git/ejercicios/historial-cambios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/git/ejercicios/historial-cambios/</guid>
      <description>&lt;p&gt;&lt;i class=&#34;fas fa-exclamation-triangle&#34; style=&#34;color:red&#34;&gt;&lt;/i&gt; Para hacer estos ejercicios es necesario haber hecho antes los  
&lt;a href=&#34;/git/ejercicios/creacion-actualizacion-repositorios.html&#34;&gt;ejercicios de creación y actualización de repositorios&lt;/a&gt; o bien hacer un clon del repositorio remoto 
&lt;a href=&#34;https://github.com/asalber/libro-git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/asalber/libro-git&lt;/a&gt; mediante la siguiente secuencia de comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git clone https://github.com/asalber/libro-git.git
&amp;gt; cd libro-git
&amp;gt; git reset --hard 8c808
&amp;gt; git remote remove origin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Mostrar el historial de cambios del repositorio.&lt;/li&gt;
&lt;li&gt;Crear la carpeta &lt;code&gt;capitulos&lt;/code&gt; y crear dentro de ella el fichero &lt;code&gt;capitulo1.txt&lt;/code&gt; con el siguiente texto.
&lt;blockquote&gt;
&lt;p&gt;Git es un sistema de control de versiones ideado por Linus Torvalds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Hacer un commit de los cambios con el mensaje &amp;ldquo;Añadido capítulo 1.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Volver a mostrar el historial de cambios del repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-0&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-0&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-0&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git log
&amp;gt; mkdir capitulos
&amp;gt; cat &amp;gt; capitulos/capitulo1.txt
Git es un sistema de control de versiones ideado por Linus Torvalds.
Ctrl+D
&amp;gt; git add .
&amp;gt; git commit -m &amp;quot;Añadido capítulo 1.&amp;quot;
&amp;gt; git log
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-1&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-1&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-1&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/historial-cambios/ejercicio1.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Crear el fichero &lt;code&gt;capitulo2.txt&lt;/code&gt; en la carpeta &lt;code&gt;capitulos&lt;/code&gt; con el siguiente texto.
&lt;blockquote&gt;
&lt;p&gt;El flujo de trabajo básico con Git consiste en:
1- Hacer cambios en el repositorio.
2- Añadir los cambios a la zona de intercambio temporal.
3- Hacer un commit de los cambios.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Hacer un commit de los cambios con el mensaje &amp;ldquo;Añadido capítulo 2.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Mostrar las diferencias entre la última versión y dos versiones anteriores.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-2&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-2&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-2&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; cat &amp;gt; capitulos/capitulo2.txt
El flujo de trabajo básico con Git consiste en:
1- Hacer cambios en el repositorio.
2- Añadir los cambios a la zona de intercambio temporal.
3- Hacer un commit de los cambios.
Ctrl+D
&amp;gt; git add .
&amp;gt; git commit -m &amp;quot;Añadido capítulo 2.&amp;quot;
&amp;gt; git diff HEAD~2..HEAD
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-3&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-3&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-3&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/historial-cambios/ejercicio2.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Crear el fichero &lt;code&gt;capitulo3.txt&lt;/code&gt; en la carpeta &lt;code&gt;capitulos&lt;/code&gt; con el siguiente texto.
&lt;blockquote&gt;
&lt;p&gt;Git permite la creación de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea en ellas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Hacer un commit de los cambios con el mensaje &amp;ldquo;Añadido capítulo 3.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Mostrar las diferencias entre la primera y la última versión del repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-4&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-4&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-4&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; cat &amp;gt; capitulos/capitulo3.txt
Git permite la creación de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea en ellas.
Ctrl+D
&amp;gt; git add .
&amp;gt; git commit -m &amp;quot;Añadido capítulo 3.&amp;quot;
&amp;gt; git log
&amp;gt; git diff &amp;amp;lt;codigo hash de la primera version&amp;gt;..HEAD
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-5&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-5&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-5&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/historial-cambios/ejercicio3.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Añadir al final del fichero &lt;code&gt;indice.txt&lt;/code&gt; la siguiente línea:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Capítulo 5: Conceptos avanzados&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hacer un commit de los cambios con el mensaje &amp;ldquo;Añadido capítulo 5 al índice.&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mostrar quién ha hecho cambios sobre el fichero &lt;code&gt;indice.txt&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-6&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-6&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-6&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; echo &amp;quot;Capítulo 5: Conceptos avanzados&amp;quot; &amp;gt;&amp;gt; indice.txt
&amp;gt; git add .
&amp;gt; git commit -m &amp;quot;Añadido capítulo 5 al índice.&amp;quot;
&amp;gt; git annotate indice.txt
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-7&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-7&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-7&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/creacion-actualizacion-repositorios/ejercicio4.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Bucles</title>
      <link>/docencia/python/ejercicios/bucles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/bucles/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario una palabra y la muestre por pantalla 10 veces.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario su edad y muestre por pantalla todos los años que ha cumplido (desde 1 hasta su edad).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla todos los números impares desde 1 hasta ese número separados por comas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero positivo y muestre por pantalla la cuenta atrás desde ese número hasta cero separados por comas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario una cantidad a invertir, el interés anual y el número de años, y muestre por pantalla el capital obtenido en la inversión cada año que dura la inversión.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero y muestre por pantalla un triángulo rectángulo como el de más abajo, de altura el número introducido.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;*
**
***
****
*****
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir un programa que muestre por pantalla la tabla de multiplicar del 1 al 10.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero y muestre por pantalla un triángulo rectángulo como el de más abajo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;1
3 1
5 3 1
7 5 3 1
9 7 5 3 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene la cadena de caracteres &lt;code&gt;contraseña&lt;/code&gt; en una variable, pregunte al usuario por la contraseña hasta que introduzca la contraseña correcta.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario un número entero y muestre por pantalla si es un número primo o no.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario una palabra y luego muestre por pantalla una a una las letras de la palabra introducida empezando por la última.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-12&#34;&gt;Ejercicio 12&lt;/h2&gt;
&lt;p&gt;Escribir un programa en el que se pregunte al usuario por una frase y una letra, y muestre por pantalla el número de veces que aparece la letra en la frase.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio12.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-13&#34;&gt;Ejercicio 13&lt;/h2&gt;
&lt;p&gt;Escribir un programa que muestre el eco de todo lo que el usuario introduzca hasta que el usuario escriba “salir” que terminará.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/bucles/ejercicio13.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de deshacer cambios</title>
      <link>/docencia/git/ejercicios/deshacer-cambios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/git/ejercicios/deshacer-cambios/</guid>
      <description>&lt;p&gt;&lt;i class=&#34;fas fa-exclamation-triangle&#34; style=&#34;color:red&#34;&gt;&lt;/i&gt; Para hacer estos ejercicios es necesario haber hecho antes los 
&lt;a href=&#34;/git/ejercicios/historial-cambios.html&#34;&gt;ejercicios sobre historial de cambios&lt;/a&gt; o bien hacer un clon del repositorio remoto 
&lt;a href=&#34;https://github.com/asalber/libro-git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/asalber/libro-git&lt;/a&gt; mediante la siguiente secuencia de comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; git clone https://github.com/asalber/libro-git.git
&amp;gt; cd libro-git
&amp;gt; git reset --hard 48ed8
&amp;gt; git remote remove origin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Eliminar la última línea del fichero &lt;code&gt;indice.txt&lt;/code&gt; y guardarlo.&lt;/li&gt;
&lt;li&gt;Comprobar el estado del repositorio.&lt;/li&gt;
&lt;li&gt;Deshacer los cambios realizados en el fichero &lt;code&gt;indice.txt&lt;/code&gt; para volver a la versión anterior del fichero.&lt;/li&gt;
&lt;li&gt;Volver a comprobar el estado del repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-0&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-0&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-0&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; nano indice.txt
# Eliminar la última línea y guardar el fichero.
&amp;gt; git status
&amp;gt; git checkout -- indice.txt
&amp;gt; git status
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-1&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-1&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-1&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/deshacer-cambios/ejercicio1.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Eliminar la última línea del fichero &lt;code&gt;indice.txt&lt;/code&gt; y guardarlo.&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Comprobar de nuevo el estado del repositorio.&lt;/li&gt;
&lt;li&gt;Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo.&lt;/li&gt;
&lt;li&gt;Comprobar de nuevo el estado del repositorio.&lt;/li&gt;
&lt;li&gt;Deshacer los cambios realizados en el fichero &lt;code&gt;indice.txt&lt;/code&gt; para volver a la versión anterior del fichero.&lt;/li&gt;
&lt;li&gt;Volver a comprobar el estado del repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-2&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-2&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-2&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; nano indice.txt
# Eliminar la última línea y guardar el fichero.
&amp;gt; git add .
&amp;gt; git status
&amp;gt; git reset indice.txt
&amp;gt; git status
&amp;gt; git checkout -- indice.txt
&amp;gt; git status
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-3&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-3&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-3&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/deshacer-cambios/ejercicio2.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Eliminar la última línea del fichero &lt;code&gt;indice.txt&lt;/code&gt; y guardarlo.&lt;/li&gt;
&lt;li&gt;Eliminar el fichero &lt;code&gt;capitulos/capitulo3.txt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Añadir un fichero nuevo &lt;code&gt;captitulos/capitulo4.txt&lt;/code&gt; vacío.&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Comprobar de nuevo el estado del repositorio.&lt;/li&gt;
&lt;li&gt;Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo.&lt;/li&gt;
&lt;li&gt;Comprobar de nuevo el estado del repositorio.&lt;/li&gt;
&lt;li&gt;Deshacer los cambios realizados para volver a la versión del repositorio.&lt;/li&gt;
&lt;li&gt;Volver a comprobar el estado del repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-4&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-4&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-4&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; nano indice.txt
# Eliminar la última línea y guardar el fichero.
&amp;gt; rm capitulos/capitulo3.txt
&amp;gt; touch capitulos/capitulo4.txt
&amp;gt; git add .
&amp;gt; git status
&amp;gt; git reset
&amp;gt; git status
&amp;gt; git checkout -- .
&amp;gt; git status
&amp;gt; git clean -f
&amp;gt; git status
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-5&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-5&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-5&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/deshacer-cambios/ejercicio3.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Eliminar la última línea del fichero &lt;code&gt;indice.txt&lt;/code&gt; y guardarlo.&lt;/li&gt;
&lt;li&gt;Eliminar el fichero &lt;code&gt;capitulos/capitulo3.txt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje &amp;ldquo;Borrado accidental.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Comprobar el historial del repositorio.&lt;/li&gt;
&lt;li&gt;Deshacer el último commit pero mantener los cambios anteriores en el directorio de trabajo y la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Comprobar el historial y el estado del repositorio.&lt;/li&gt;
&lt;li&gt;Volver a hacer el commit con el mismo mensaje de antes.&lt;/li&gt;
&lt;li&gt;Deshacer el último commit y los cambios anteriores del directorio de trabajo volviendo a la versión anterior del repositorio.&lt;/li&gt;
&lt;li&gt;Comprobar de nuevo el historial y el estado del repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-6&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-6&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-6&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; nano indice.txt
# Eliminar la última línea y guardar el fichero.
&amp;gt; rm capitulos/capitulo3.txt
&amp;gt; git commit -a &amp;quot;Borrado accidental.&amp;quot;
&amp;gt; git status
&amp;gt; git log
&amp;gt; git reset --soft HEAD~1
&amp;gt; git status
&amp;gt; git commit -m &amp;quot;Borrado accidental.&amp;quot;
&amp;gt; git status
&amp;gt; git log
&amp;gt; git reset --hard HEAD~1
&amp;gt; git log
&amp;gt; git status
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-7&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-7&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-7&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/deshacer-cambios/ejercicio4.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Listas y Tuplas</title>
      <link>/docencia/python/ejercicios/listas-tuplas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/listas-tuplas/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene las asignaturas de un curso (por ejemplo Matemáticas, Física, Química, Historia y Lengua) en una lista y la muestre por pantalla.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene las asignaturas de un curso (por ejemplo Matemáticas, Física, Química, Historia y Lengua) en una lista y la muestre por pantalla el mensaje &lt;code&gt;Yo estudio &amp;lt;asignatura&amp;gt;&lt;/code&gt;, donde &lt;code&gt;&amp;lt;asignatura&amp;gt;&lt;/code&gt; es cada una de las asignaturas de la lista.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene las asignaturas de un curso (por ejemplo Matemáticas, Física, Química, Historia y Lengua) en una lista, pregunte al usuario la nota que ha sacado en cada asignatura, y después las muestre por pantalla con el mensaje &lt;code&gt;En &amp;lt;asignatura&amp;gt; has sacado &amp;lt;nota&amp;gt;&lt;/code&gt; donde &lt;code&gt;&amp;lt;asignatura&amp;gt;&lt;/code&gt; es cada una des las asignaturas de la lista y &lt;code&gt;&amp;lt;nota&amp;gt;&lt;/code&gt; cada una de las correspondientes notas introducidas por el usuario.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario los números ganadores de la lotería primitiva, los almacene en una lista y los muestre por pantalla ordenados de menor a mayor.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene en una lista los números del 1 al 10 y los muestre por pantalla en orden inverso separados por comas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene las asignaturas de un curso (por ejemplo Matemáticas, Física, Química, Historia y Lengua) en una lista, pregunte al usuario la nota que ha sacado en cada asignatura y elimine de la lista las asignaturas aprobadas. Al final el programa debe mostrar por pantalla las asignaturas que el usuario tiene que repetir.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene el abecedario en una lista, elimine de la lista las letras que ocupen posiciones múltiplos de 3, y muestre por pantalla la lista resultante.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario una palabra y muestre por pantalla si es un palíndromo.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pida al usuario una palabra y muestre por pantalla el número de veces que contiene cada vocal.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene en una lista los siguientes precios, 50, 75, 46, 22, 80, 65, 8, y muestre por pantalla el menor y el mayor de los precios.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene los vectores (1,2,3) y (-1,0,2) en dos listas y muestre por pantalla su producto escalar.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-12&#34;&gt;Ejercicio 12&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene las matrices
$$
A = \left(
\begin{array}{rrr}
1 &amp;amp; 2 &amp;amp; 3\newline
4 &amp;amp; 5 &amp;amp; 6
\end{array}
\right)
\quad  y
\quad
B = \left(
\begin{array}{rr}
-1 &amp;amp; 0\newline
0 &amp;amp; 1\newline
1 &amp;amp; 1
\end{array}
\right)
$$&lt;/p&gt;
&lt;p&gt;en una lista y muestre por pantalla su producto.&lt;br&gt;
Nota: Para representar matrices mediante listas usar listas anidadas, representando cada vector fila en una lista.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio12.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-13&#34;&gt;Ejercicio 13&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte por una muestra de números, separados por comas, los guarde en una lista y muestre por pantalla su media y desviación típica.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/listas-tuplas/ejercicio13.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de gestión de ramas</title>
      <link>/docencia/git/ejercicios/ramas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/git/ejercicios/ramas/</guid>
      <description>&lt;p&gt;&lt;i class=&#34;fas fa-exclamation-triangle&#34; style=&#34;color:red&#34;&gt;&lt;/i&gt; Para hacer estos ejercicios es necesario haber hecho antes los 
&lt;a href=&#34;/git/ejercicios/historial-cambios.html&#34;&gt;ejercicios sobre historial de cambios&lt;/a&gt; o bien hacer un clon del repositorio remoto 
&lt;a href=&#34;https://github.com/asalber/libro-git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/asalber/libro-git&lt;/a&gt; mediante la siguiente secuencia de comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; git clone https://github.com/asalber/libro-git.git
&amp;gt; cd libro-git
&amp;gt; git reset --hard 48ed8
&amp;gt; git remote remove origin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Crear una nueva rama &lt;code&gt;bibliografia&lt;/code&gt; y mostrar las ramas del repositorio.&lt;/p&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-0&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-0&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-0&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git branch bibliografia
&amp;gt; git branch -av
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-1&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-1&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-1&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/ramas/ejercicio1.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Crear el fichero &lt;code&gt;capitulos/capitulo4.txt&lt;/code&gt; y añadir el texto siguiente&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;En este capítulo veremos cómo usar GitHub para alojar repositorios en remoto.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Hacer un commit con el mensaje &amp;ldquo;Añadido capítulo 4.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Mostrar la historia del repositorio incluyendo todas las ramas.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-2&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-2&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-2&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; cat &amp;gt; capitulos/capitulo4.txt
En este capítulo veremos cómo usar GitHub para alojar repositorios en remoto.
Ctrl+D
&amp;gt; git add .
&amp;gt; git commit -m &amp;quot;Añadido capítulo 4.&amp;quot;
&amp;gt; git log --graph --all --oneline
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-3&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-3&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-3&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/ramas/ejercicio2.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Cambiar a la rama &lt;code&gt;bibliografia&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Crear el fichero &lt;code&gt;bibliografia.txt&lt;/code&gt; y añadir la siguiente referencia&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Chacon, S. and Straub, B. Pro Git. Apress.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Hacer un commit con el mensaje &amp;ldquo;Añadida primera referencia bibliográfica.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Mostrar la historia del repositorio incluyendo todas las ramas.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-4&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-4&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-4&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git checkout bibliografia
&amp;gt; cat &amp;gt; bibliografia.txt
- Chacon, S. and Straub, B. Pro Git. Apress.
Ctrl+D
&amp;gt; git add .
&amp;gt; git commit -m &amp;quot;Añadida primera referencia bibliográfica.&amp;quot;
&amp;gt; git log --graph --all --oneline
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-5&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-5&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-5&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/ramas/ejercicio3.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Fusionar la rama &lt;code&gt;bibliografia&lt;/code&gt; con la rama &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Mostrar la historia del repositorio incluyendo todas las ramas.&lt;/li&gt;
&lt;li&gt;Eliminar la rama &lt;code&gt;bibliografia&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Mostrar de nuevo la historia del repositorio incluyendo todas las ramas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-6&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-6&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-6&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git checkout master
&amp;gt; git merge bibliografia
&amp;gt; git log --graph --all --oneline
&amp;gt; git branch -d bibliografia
&amp;gt; git log --graph --all --oneline
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-7&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-7&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-7&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/ramas/ejercicio4.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Crear la rama &lt;code&gt;bibliografia&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Cambiar a la rama &lt;code&gt;bibliografia&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Cambiar el fichero &lt;code&gt;bibliografia.txt&lt;/code&gt; para que contenga las siguientes referencias:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Scott Chacon and Ben Straub. Pro Git. Apress.&lt;/li&gt;
&lt;li&gt;Ryan Hodson. Ry&amp;rsquo;s Git Tutorial. Smashwords (2014)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje &amp;ldquo;Añadida nueva referencia bibliográfica.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Cambiar a la rama &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Cambiar el fichero &lt;code&gt;bibliografia.txt&lt;/code&gt; para que contenga las siguientes referencias:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Chacon, S. and Straub, B. Pro Git. Apress.&lt;/li&gt;
&lt;li&gt;Loeliger, J. and McCullough, M. Version control with Git. O&amp;rsquo;Reilly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje &amp;ldquo;Añadida nueva referencia bibliográfica.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Fusionar la rama &lt;code&gt;bibliografia&lt;/code&gt; con la rama &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Resolver el conflicto dejando el fichero &lt;code&gt;bibliografia.txt&lt;/code&gt; con las referencias:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Chacon, S. and Straub, B. Pro Git. Apress.&lt;/li&gt;
&lt;li&gt;Loeliger, J. and McCullough, M. Version control with Git. O&amp;rsquo;Reilly.&lt;/li&gt;
&lt;li&gt;Hodson, R. Ry&amp;rsquo;s Git Tutorial. Smashwords (2014)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje &amp;ldquo;Resuelto conflicto de bibliografía.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Mostrar la historia del repositorio incluyendo todas las ramas.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-8&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-8&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-8&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git branch bibliografia
&amp;gt; git checkout bibliografia
&amp;gt; cat &amp;gt; bibliografia.txt
- Scott Chacon and Ben Straub. Pro Git. Apress.
- Ryan Hodson. Ry&#39;s Git Tutorial. Smashwords (2014)
Ctrl+D
&amp;gt; git commit -a -m &amp;quot;Añadida nueva referencia bibliográfica.&amp;quot;
&amp;gt; git checkout master
&amp;gt; cat &amp;gt; bibliografia.txt
- Chacon, S. and Straub, B. Pro Git. Apress.
- Loeliger, J. and McCullough, M. Version control with Git. O&#39;Reilly.
Ctrl+D
&amp;gt; git commit -a -m &amp;quot;Añadida nueva referencia bibliográfica.&amp;quot;
&amp;gt; git merge bibliografia
&amp;gt; git nano bibliografia
# Hacer los cambios indicados en el fichero
&amp;gt; git commit -a -m &amp;quot;Solucionado conflicto bibliografía.&amp;quot;
&amp;gt; git log --graph --all --oneline
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-9&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-9&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-9&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/ramas/ejercicio5.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Diccionarios</title>
      <link>/docencia/python/ejercicios/diccionarios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/diccionarios/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que guarde en una variable el diccionario &lt;code&gt;{&#39;Euro&#39;:&#39;€&#39;, &#39;Dollar&#39;:&#39;$&#39;, &#39;Yen&#39;:&#39;¥&#39;}&lt;/code&gt;, pregunte al usuario por una divisa y muestre su símbolo o un mensaje de aviso si la divisa no está en el diccionario.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario su nombre, edad, dirección y teléfono y lo guarde en un diccionario. Después debe mostrar por pantalla el mensaje &lt;code&gt;&amp;lt;nombre&amp;gt; tiene &amp;lt;edad&amp;gt; años, vive en &amp;lt;dirección&amp;gt; y su número de teléfono es &amp;lt;teléfono&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir un programa que guarde en un diccionario los precios de las frutas de la tabla, pregunte al usuario por una fruta, un número de kilos y muestre por pantalla el precio de ese número de kilos de fruta. Si la fruta no está en el diccionario debe mostrar un mensaje informando de ello.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Fruta&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Precio&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Plátano&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1.35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Manzana&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.80&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Pera&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Naranja&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0.70&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte una fecha en formato &lt;code&gt;dd/mm/aaaa&lt;/code&gt; y muestre por pantalla la misma fecha en formato &lt;code&gt;dd de &amp;lt;mes&amp;gt; de aaaa&lt;/code&gt; donde &lt;code&gt;&amp;lt;mes&amp;gt;&lt;/code&gt; es el nombre del mes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir un programa que almacene el diccionario con los créditos de las asignaturas de un curso &lt;code&gt;{&#39;Matemáticas&#39;: 6, &#39;Física&#39;: 4, &#39;Química&#39;: 5}&lt;/code&gt; y después muestre por pantalla los créditos de cada asignatura en el formato &lt;code&gt;&amp;lt;asignatura&amp;gt; tiene &amp;lt;créditos&amp;gt; créditos&lt;/code&gt;, donde &lt;code&gt;&amp;lt;asignatura&amp;gt;&lt;/code&gt; es cada una de las asignaturas del curso, y &lt;code&gt;&amp;lt;créditos&amp;gt;&lt;/code&gt; son sus créditos. Al final debe mostrar también el número total de créditos del curso.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir un programa que cree un diccionario vacío y lo vaya llenado con información sobre una persona (por ejemplo nombre, edad, sexo, teléfono, correo electrónico, etc.) que se le pida al usuario. Cada vez que se añada un nuevo dato debe imprimirse el contenido del diccionario.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir un programa que cree un diccionario simulando una cesta de la compra. El programa debe preguntar el artículo y su precio y añadir el par al diccionario, hasta que el usuario decida terminar. Después se debe mostrar por pantalla la lista de la compra y el coste total, con el siguiente formato&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Lista de la compra&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Artículo 1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Precio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Artículo 2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Precio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Artículo 3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Precio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&amp;hellip;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Coste&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir un programa que cree un diccionario de traducción español-inglés. El usuario introducirá las palabras en español e inglés separadas por dos puntos, y cada par &lt;code&gt;&amp;lt;palabra&amp;gt;:&amp;lt;traducción&amp;gt;&lt;/code&gt; separados por comas. El programa debe crear un diccionario con las palabras y sus traducciones. Después pedirá una frase en español y utilizará el diccionario para traducirla palabra a palabra. Si una palabra no está en el diccionario debe dejarla sin traducir.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir un programa que gestione las facturas pendientes de cobro de una empresa. Las facturas se almacenarán en un diccionario donde la clave de cada factura será el número de factura y el valor el coste de la factura. El programa debe preguntar al usuario si quiere añadir una nueva factura, pagar una existente o terminar. Si desea añadir una nueva factura se preguntará por el número de factura y su coste y se añadirá al diccionario. Si se desea pagar una factura se preguntará por el número de factura y se eliminará del diccionario. Después de cada operación el programa debe mostrar por pantalla la cantidad cobrada hasta el momento y la cantidad pendiente de cobro.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Escribir un programa que permita gestionar la base de datos de clientes de una empresa. Los clientes se guardarán en un diccionario en el que la clave de cada cliente será su NIF, y el valor será otro diccionario con los datos del cliente (nombre, dirección, teléfono, correo, preferente), donde preferente tendrá el valor &lt;code&gt;True&lt;/code&gt; si se trata de un cliente preferente. El programa debe preguntar al usuario por una opción del siguiente menú: (1) Añadir cliente, (2) Eliminar cliente, (3) Mostrar cliente, (4) Listar todos los clientes, (5) Listar clientes preferentes, (6) Terminar. En función de la opción elegida el programa tendrá que hacer lo siguiente:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Preguntar los datos del cliente, crear un diccionario con los datos y añadirlo a la base de datos.&lt;/li&gt;
&lt;li&gt;Preguntar por el NIF del cliente y eliminar sus datos de la base de datos.&lt;/li&gt;
&lt;li&gt;Preguntar por el NIF del cliente y mostrar sus datos.&lt;/li&gt;
&lt;li&gt;Mostrar lista de todos los clientes de la base datos con su NIF y nombre.&lt;/li&gt;
&lt;li&gt;Mostrar la lista de clientes preferentes de la base de datos con su NIF y nombre.&lt;/li&gt;
&lt;li&gt;Terminar el programa.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;El directorio de los clientes de una empresa está organizado en una cadena de texto como la de más abajo, donde cada línea contiene la información del nombre, email, teléfono, nif, y el descuento que se le aplica. Las líneas se separan con el carácter de cambio de línea &lt;code&gt;\n&lt;/code&gt; y la primera línea contiene los nombres de los campos con la información contenida en el directorio.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;quot;nif;nombre;email;teléfono;descuento\n01234567L;Luis González;luisgonzalez@mail.com;656343576;12.5\n71476342J;Macarena Ramírez;macarena@mail.com;692839321;8\n63823376M;Juan José Martínez;juanjo@mail.com;664888233;5.2\n98376547F;Carmen Sánchez;carmen@mail.com;667677855;15.7&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Escribir un programa que genere un diccionario con la información del directorio, donde cada elemento corresponda a un cliente y tenga por clave su nif y por valor otro diccionario con el resto de la información del cliente. Los diccionarios con la información de cada cliente tendrán como claves los nombres de los campos y como valores la información de cada cliente correspondientes a los campos. Es decir, un diccionario como el siguiente&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;{&#39;01234567L&#39;: {&#39;nombre&#39;: &#39;Luis González&#39;, &#39;email&#39;: &#39;luisgonzalez@mail.com&#39;, &#39;teléfono&#39;: &#39;656343576&#39;, &#39;descuento&#39;: 12.5}, &#39;71476342J&#39;: {&#39;nombre&#39;: &#39;Macarena Ramírez&#39;, &#39;email&#39;: &#39;macarena@mail.com&#39;, &#39;teléfono&#39;: &#39;692839321&#39;, &#39;descuento&#39;: 8.0}, &#39;63823376M&#39;: {&#39;nombre&#39;: &#39;Juan José Martínez&#39;, &#39;email&#39;: &#39;juanjo@mail.com&#39;, &#39;teléfono&#39;: &#39;664888233&#39;, &#39;descuento&#39;: 5.2}, &#39;98376547F&#39;: {&#39;nombre&#39;: &#39;Carmen Sánchez&#39;, &#39;email&#39;: &#39;carmen@mail.com&#39;, &#39;teléfono&#39;: &#39;667677855&#39;, &#39;descuento&#39;: 15.7}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/diccionarios/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de repositorios remotos</title>
      <link>/docencia/git/ejercicios/repositorios-remotos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/git/ejercicios/repositorios-remotos/</guid>
      <description>&lt;p&gt;&lt;i class=&#34;fas fa-exclamation-triangle&#34; style=&#34;color:red&#34;&gt;&lt;/i&gt; Para hacer estos ejercicios es necesario haber hecho antes los 
&lt;a href=&#34;/git/ejercicios/ramas.html&#34;&gt;ejercicios sobre ramas&lt;/a&gt; o bien hacer un clon del repositorio remoto 
&lt;a href=&#34;https://github.com/asalber/libro-git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/asalber/libro-git&lt;/a&gt; mediante la siguiente secuencia de comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt; git clone https://github.com/asalber/libro-git.git
&amp;gt; cd libro-git
&amp;gt; git reset --hard cb1e4
&amp;gt; git remote remove origin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Crear un nuevo repositorio público en GitHub con el nombre &lt;code&gt;libro-git&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Añadirlo al repositorio local del libro.&lt;/li&gt;
&lt;li&gt;Mostrar todos los repositorios remotos configurados.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-0&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-0&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-0&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Crear el repositorio en GitHub y copiar su url con protocolo https.
&amp;gt; git remote add github url
&amp;gt; git remote -v
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-1&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-1&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-1&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/repositorios-remotos/ejercicio1.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Añadir los cambios del repositorio local al repositorio remoto de GitHub.&lt;/li&gt;
&lt;li&gt;Acceder a GitHub y comprobar que se han subido los cambios mostrando el historial de versiones.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-2&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-2&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-2&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;gt;git push github master
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-3&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-3&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-3&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/repositorios-remotos/ejercicio2.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Colaborar en el repositorio remoto &lt;code&gt;libro-git&lt;/code&gt; de otro usuario.&lt;/li&gt;
&lt;li&gt;Clonar su repositorio &lt;code&gt;libro-git&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Añadir el fichero &lt;code&gt;autores.txt&lt;/code&gt; que contenga el nombre del usuario y su correo electrónico.&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Hacer un commit con el mensaje &amp;ldquo;Añadido autor.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Subir los cambios al repositorio remoto.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-4&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-4&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-4&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Entrar en GigHub en el proyecto libro-git del que seamos colaboradores y copiar la url.
&amp;gt; git clone url
&amp;gt; cat &amp;gt; autores.txt
# Escribir el nombre del autor y su correo.
Ctrl+D
&amp;gt; git add .
&amp;gt; git commit -m &amp;quot;Añadido autor.&amp;quot;
&amp;gt; git push origin master.
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-5&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-5&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-5&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/repositorios-remotos/ejercicio3.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Hacer una bifurcación del repositorio remoto &lt;code&gt;asalber/libro-git&lt;/code&gt; en GitHub.&lt;/li&gt;
&lt;li&gt;Clonar el repositorio creado en la cuenta de GitHub del usuario.&lt;/li&gt;
&lt;li&gt;Crear una nueva rama &lt;code&gt;autoria&lt;/code&gt; y activarla.&lt;/li&gt;
&lt;li&gt;Añadir el nombre del usuario y su correo al fichero &lt;code&gt;autores.txt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Añadir los cambios a la zona de intercambio temporal.&lt;/li&gt;
&lt;li&gt;Hacer un commit con el mensaje &amp;ldquo;Añadido nuevo autor.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Subir los cambios de la rama &lt;code&gt;autoria&lt;/code&gt; al repositorio remoto en GitHub.&lt;/li&gt;
&lt;li&gt;Hacer un Pull Request de los cambios en la rama &lt;code&gt;autoria&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-6&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-6&#34;&gt;
      Solución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-6&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# Hacer el fork del repositorio asalber/libro-git en GitHub y copiar la url del repositorio creado en la cuenta de GitHub del usuario.
&amp;gt; git clone url
&amp;gt; git checkout -b autoria
# Editar con nano el fichero autores.txt y añadir el nombre y el correo electrónico del usuario en una nueva línea.
&amp;gt; git commit -am &amp;quot;Añadido nuevo autor.&amp;quot;
&amp;gt; git push origin autoria
# Ir al repositorio remoto en GitHub y hacer clic en el botón Compare &amp;amp; Pull Request y después completar la solicitud haciendo clic en el botón Create Pull Request.
&lt;/code&gt;&lt;/pre&gt;

    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;spoiler &#34; &gt;
  &lt;p&gt;
    &lt;a class=&#34;btn btn-primary&#34; data-toggle=&#34;collapse&#34; href=&#34;#spoiler-7&#34; role=&#34;button&#34; aria-expanded=&#34;false&#34; aria-controls=&#34;spoiler-7&#34;&gt;
      Resolución
    &lt;/a&gt;
  &lt;/p&gt;
  &lt;div class=&#34;collapse card &#34; id=&#34;spoiler-7&#34;&gt;
    &lt;div class=&#34;card-body&#34;&gt;
      &lt;img src=&#34;../soluciones/repositorios-remotos/ejercicio4.gif&#34; /&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Funciones</title>
      <link>/docencia/python/ejercicios/funciones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/funciones/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir una función que muestre por pantalla el saludo &lt;code&gt;¡Hola amiga!&lt;/code&gt; cada vez que se la invoque.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir una función a la que se le pase una cadena &lt;code&gt;&amp;lt;nombre&amp;gt;&lt;/code&gt; y muestre por pantalla el saludo &lt;code&gt;¡hola &amp;lt;nombre&amp;gt;!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba un número entero positivo y devuelva su factorial.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir una función que calcule el total de una factura tras aplicarle el IVA. La función debe recibir la cantidad sin IVA y el porcentaje de IVA a aplicar, y devolver el total de la factura. Si se invoca la función sin pasarle el porcentaje de IVA, deberá aplicar un 21%.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir una función que calcule el área de un círculo y otra que calcule el volumen de un cilindro usando la primera función.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una muestra de números en una lista y devuelva su media.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una muestra de números en una lista y devuelva otra lista con sus cuadrados.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una muestra de números en una lista y devuelva un diccionario con su media, varianza y desviación típica.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir una función que calcule el máximo común divisor de dos números y otra que calcule el mínimo común múltiplo.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Escribir una función que convierta un número decimal en binario y otra que convierta un número binario en decimal.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;Escribir un programa que reciba una cadena de caracteres y devuelva un diccionario con cada palabra que contiene y su frecuencia.
Escribir otra función que reciba el diccionario generado con la función anterior y devuelva una tupla con la palabra más repetida y su frecuencia.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/funciones/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Programación Funcional</title>
      <link>/docencia/python/ejercicios/programacion-funcional/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/programacion-funcional/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir una función que aplique un descuento a un precio y otra que aplique el IVA a un precio. Escribir una tercera función que reciba un diccionario con los precios y porcentajes de una cesta de la compra, y una de las funciones anteriores, y utilice la función pasada para aplicar los descuentos o el IVA a los productos de la cesta y devolver el precio final de la cesta.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir una función que simule una calculadora científica que permita calcular el seno, coseno, tangente, exponencial y logaritmo neperiano. La función preguntará al usuario el valor y la función a aplicar, y mostrará por pantalla una tabla con los enteros de 1 al valor introducido y el resultado de aplicar la función a esos enteros.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba otra función y una lista, y devuelva otra lista con el resultado de aplicar la función dada a cada uno de los elementos de la lista.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba otra función booleana y una lista, y devuelva otra lista con los elementos de la lista que devuelvan &lt;code&gt;True&lt;/code&gt; al aplicarles la función booleana.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una frase y devuelva un diccionario con las palabras que contiene y su longitud.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir una función reciba una lista de notas y devuelva la lista de calificaciones correspondientes a esas notas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;Escribir una función reciba un diccionario con las asignaturas y las notas de un alumno y devuelva otro diccionario con las asignaturas en mayúsculas y las calificaciones correspondientes a las notas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Escribir una función reciba un diccionario con las asignaturas y las notas de un alumno y devuelva otro diccionario con las asignaturas en mayúsculas y las calificaciones correspondientes a las notas aprobadas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-9&#34;&gt;Ejercicio 9&lt;/h2&gt;
&lt;p&gt;Escribir una función que calcule el módulo de un vector.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio9.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-10&#34;&gt;Ejercicio 10&lt;/h2&gt;
&lt;p&gt;Una inmobiliaria de una ciudad maneja una lista de inmuebles como la siguiente:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[{&#39;año&#39;: 2000, &#39;metros&#39;: 100, &#39;habitaciones&#39;: 3, &#39;garaje&#39;: True, &#39;zona&#39;: &#39;A&#39;},
{&#39;año&#39;: 2012, &#39;metros&#39;: 60, &#39;habitaciones&#39;: 2, &#39;garaje&#39;: True, &#39;zona&#39;: &#39;B&#39;},
{&#39;año&#39;: 1980, &#39;metros&#39;: 120, &#39;habitaciones&#39;: 4, &#39;garaje&#39;: False, &#39;zona&#39;: &#39;A&#39;},
{&#39;año&#39;: 2005, &#39;metros&#39;: 75, &#39;habitaciones&#39;: 3, &#39;garaje&#39;: True, &#39;zona&#39;: &#39;B&#39;},
{&#39;año&#39;: 2015, &#39;metros&#39;: 90, &#39;habitaciones&#39;: 2, &#39;garaje&#39;: False, &#39;zona&#39;: &#39;A&#39;}]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Construir una función que permita hacer búsqueda de inmuebles en función de un presupuesto dado. La función recibirá como entrada la lista de inmuebles y un precio, y devolverá otra lista con los inmuebles cuyo precio sea menor o igual que el dado. Los inmuebles de la lista que se devuelva deben incorporar un nuevo par a cada diccionario con el precio del inmueble, donde el precio de un inmueble se calcula con las siguiente fórmula en función de la zona:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Zona A: precio = (metros * 1000 + habitaciones * 5000 + garaje * 15000) * (1-antiguedad/100)&lt;/li&gt;
&lt;li&gt;Zona B: precio = (metros * 1000 + habitaciones * 5000 + garaje * 15000) * (1-antiguedad/100) * 1.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio10.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-11&#34;&gt;Ejercicio 11&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una muestra de números y devuelva los valores atípicos, es decir, los valores cuya puntuación típica sea mayor que 3 o menor que -3.
Nota: La puntuación típica de un valor se obtiene restando la media y dividiendo por la desviación típica de la muestra.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/programacion-funcional/ejercicio11.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Ficheros</title>
      <link>/docencia/python/ejercicios/ficheros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/ficheros/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir una función que pida un número entero entre 1 y 10 y guarde en un fichero con el nombre &lt;code&gt;tabla-n.txt&lt;/code&gt; la tabla de multiplicar de ese número, done &lt;code&gt;n&lt;/code&gt; es el número introducido.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir una función que pida un número entero entre 1 y 10, lea el fichero &lt;code&gt;tabla-n.txt&lt;/code&gt; con la tabla de multiplicar de ese número, done &lt;code&gt;n&lt;/code&gt; es el número introducido, y la muestre por pantalla. Si el fichero no existe debe mostrar un mensaje por pantalla informando de ello.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir una función que pida dos números &lt;code&gt;n&lt;/code&gt; y &lt;code&gt;m&lt;/code&gt; entre 1 y 10, lea el fichero &lt;code&gt;tabla-n.txt&lt;/code&gt; con la tabla de multiplicar de ese número, y muestre por pantalla la línea &lt;code&gt;m&lt;/code&gt; del fichero. Si el fichero no existe debe mostrar un mensaje por pantalla informando de ello.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir un programa que acceda a un fichero de internet mediante su url y muestre por pantalla el número de palabras que contiene.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir un programa que abra el fichero con información sobre el PIB per cápita de los países de la Unión Europea (url:&lt;code&gt;https://ec.europa.eu/eurostat/estat-navtree-portlet-prod/BulkDownloadListing?file=data/sdg_08_10.tsv.gz&amp;amp;unzip=true&lt;/code&gt;), pregunte por las iniciales de un país y muestre el PIB per cápita de ese país de todos los años disponibles.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir un programa para gestionar un listín telefónico con los nombres y los teléfonos de los clientes de una empresa. El programa incorporar funciones crear el fichero con el listín si no existe, para consultar el teléfono de un cliente, añadir el teléfono de un nuevo cliente y eliminar el teléfono de un cliente. El listín debe estar guardado en el fichero de texto &lt;code&gt;listin.txt&lt;/code&gt; donde el nombre del cliente y su teléfono deben aparecer separados por comas y cada cliente en una línea distinta.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;El fichero 
&lt;a href=&#34;../soluciones/ficheros/cotizacion.csv&#34;&gt;cotizacion.csv&lt;/a&gt; contiene las cotizaciones de las empresas del IBEX35 con las siguientes columnas: &lt;code&gt;Nombre&lt;/code&gt; (nombre de la empresa), &lt;code&gt;Final&lt;/code&gt; (precio de la acción al cierre de bolsa), &lt;code&gt;Máximo&lt;/code&gt; (precio máximo de la acción durante la jornada), &lt;code&gt;Mínimo&lt;/code&gt; (precio mínimo de la acción durante la jornada), &lt;code&gt;Volumen&lt;/code&gt; (Volumen al cierre de bolsa), &lt;code&gt;Efectivo&lt;/code&gt; (capitalización al cierre en miles de euros).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Construir una función reciba el fichero de cotizaciones y devuelva un diccionario con los datos del fichero por columnas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Construir una función que reciba el diccionario devuelto por la función anterior y cree un fichero en formato csv con el mínimo, el máximo y la media de dada columna.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;El fichero 
&lt;a href=&#34;../soluciones/ficheros/calificaciones.csv&#34;&gt;calificaciones.csv&lt;/a&gt; contiene las calificaciones de un curso. Durante el curso se realizaron dos exámenes parciales de teoría y un examen de prácticas. Los alumnos que tuvieron menos de 4 en alguno de estos exámenes pudieron repetirlo en la al final del curso (convocatoria ordinaria). Escribir un programa que contenga las siguientes funciones:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Una función que reciba el fichero de calificaciones y devuelva una lista de diccionarios, donde cada diccionario contiene la información de los exámenes y la asistencia de un alumno. La lista tiene que estar ordenada por apellidos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Una función que reciba una lista de diccionarios como la que devuelve la función anterior y añada a cada diccionario un nuevo par con la nota final del curso. El peso de cada parcial de teoría en la nota final es de un 30% mientras que el peso del examen de prácticas es de un 40%.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Una función que reciba una lista de diccionarios como la que devuelve la función anterior y devuelva dos listas, una con los alumnos aprobados y otra con los alumnos suspensos. Para aprobar el curso, la asistencia tiene que ser mayor o igual que el 75%, la nota de los exámenes parciales y de prácticas mayor o igual que 4 y la nota final mayor o igual que 5.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/ficheros/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de Depuración</title>
      <link>/docencia/python/ejercicios/depuracion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/depuracion/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Corregir los errores sintácticos del siguiente programa:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;contraseña = input(&#39;Introduce la contraseña: &amp;quot;)
if contraseña in [&#39;sesamo&#39;):
  print(&#39;Pasa&#39;)
else
  print(&#39;No pasa&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/depuracion/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Detectar y corregir los errores del siguiente programa que aplica el iva a una factura:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;base = input(&#39;Introduce la base imponible de la factura: &#39;)
print(aplica_iva(base, iva))

def aplica_iva(base, iva = 21):
    base = base * iva   
    return base 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/depuracion/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Detectar y corregir los errores del siguiente programa que calcula el producto escalar de dos vectores:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;u = (1, 2, 3)
v = (4, 5, 6)

def producto_escalar(u, v):
    for i in u:
        u[i+1] *= v[i+1]
    return sum(u)

print(producto_escalar(u, v))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/depuracion/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Detectar y corregir los errores del siguiente programa que devuelve y elimina el teléfono de un listín telefónico a través del nombre del usuario:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;listin = {&#39;Juan&#39;:123456789, &#39;Pedro&#39;:987654321}

def elimina(listin, usuario):
    del listin[usuario]
    return listin[usuario]

print(elimina(listin, &#39;Pablo&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/depuracion/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Detectar y corregir los errores del siguiente programa que multiplica dos matrices:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = ((1, 2, 3),
     (3, 2, 1))
b = ((1, 2),
     (3, 4),
     (5, 6))

def producto(a, b):
    producto = []
    for i in range(len(b)):
        fila = []
        for j in range(len(a[0])):
            suma = 0
            for k in range(len(a[0]+1)):
                suma += a[i][k] * b[k+1][j]
            fila[j] = suma
        producto[i] = tuple(fila)
    return tuple(producto)

print(producto(a, b))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/depuracion/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de la Librería Pandas</title>
      <link>/docencia/python/ejercicios/pandas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/pandas/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario por las ventas de un rango de años y muestre por pantalla una serie con los datos de las ventas indexada por los años, antes y después de aplicarles un descuento del 10%.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba un diccionario con las notas de los alumno de un curso y devuelva una serie con la nota mínima, la máxima, media y la desviación típica.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba un diccionario con las notas de los alumnos de un curso y devuelva una serie con las notas de los alumnos aprobados ordenadas de mayor a menor.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir programa que genere y muestre por pantalla un DataFrame con los datos de la tabla siguiente:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Mes&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Ventas&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Gastos&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Enero&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;30500&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;22000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Febrero&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;35600&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;23400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Marzo&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;28300&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;18100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Abril&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;33900&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;20700&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba un DataFrame con el formato del ejercicio anterior, una lista de meses, y devuelva el balance (ventas - gastos) total en los meses indicados.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;El fichero 
&lt;a href=&#34;../soluciones/pandas/cotizacion.csv&#34;&gt;&lt;code&gt;cotizacion.csv&lt;/code&gt;&lt;/a&gt; contiene las cotizaciones de las empresas del IBEX35 con las siguientes columnas: &lt;code&gt;nombre&lt;/code&gt; (nombre de la empresa), &lt;code&gt;Final&lt;/code&gt; (precio de la acción al cierre de bolsa), &lt;code&gt;Máximo&lt;/code&gt; (precio máximo de la acción durante la jornada), &lt;code&gt;Mínimo&lt;/code&gt; (precio mínimo de la acción durante la jornada), &lt;code&gt;volumen&lt;/code&gt; (Volumen al cierre de bolsa), &lt;code&gt;Efectivo&lt;/code&gt; (capitalización al cierre en miles de euros). Construir una función que construya un DataFrame a partir del un fichero con el formato anterior y devuelva otro DataFrame con el mínimo, el máximo y la media de dada columna.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;El fichero 
&lt;a href=&#34;../soluciones/pandas/titanic.csv&#34;&gt;titanic.csv&lt;/a&gt; contiene información sobre los pasajeros del Titanic. Escribir un programa con los siguientes requisitos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generar un DataFrame con los datos del fichero.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla las dimensiones del DataFrame, el número de datos que contiene, los nombres de sus columnas y filas, los tipos de datos de las columnas, las 10 primeras filas y las 10 últimas filas&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla los datos del pasajero con identificador 148.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla las filas pares del DataFrame.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla los nombres de las personas que iban en primera clase ordenadas alfabéticamente.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla el porcentaje de personas que sobrevivieron y murieron.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla el porcentaje de personas que sobrevivieron en cada clase.&lt;/li&gt;
&lt;li&gt;Eliminar del DataFrame los pasajeros con edad desconocida.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla la edad media de las mujeres que viajaban en cada clase.&lt;/li&gt;
&lt;li&gt;Añadir una nueva columna booleana para ver si el pasajero era menor de edad o no.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla el porcentaje de menores y mayores de edad que sobrevivieron en cada clase.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;Los ficheros 
&lt;a href=&#34;../soluciones/pandas/emisiones-2016.csv&#34;&gt;emisiones-2016.csv&lt;/a&gt;, 
&lt;a href=&#34;../soluciones/pandas/emisiones-2017.csv&#34;&gt;emisiones-2017.csv&lt;/a&gt;, 
&lt;a href=&#34;../soluciones/pandas/emisiones-2018.csv&#34;&gt;emisiones-2018.csv&lt;/a&gt; y 
&lt;a href=&#34;../soluciones/pandas/emisiones-2019.csv&#34;&gt;emisiones-2019.csv&lt;/a&gt;, contienen datos sobre las emisiones contaminates en la ciudad de Madrid en los años 2016, 2017, 2018 y 2019 respectivamente. Escribir un programa con los siguientes requisitos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generar un DataFrame con los datos de los cuatro ficheros.&lt;/li&gt;
&lt;li&gt;Filtrar las columnas del DataFrame para quedarse con las columnas ESTACION, MAGNITUD, AÑO, MES y las correspondientes a los días D01, D02, etc.&lt;/li&gt;
&lt;li&gt;Reestructurar el DataFrame para que los valores de los contaminantes de las columnas de los días aparezcan en una única columna.&lt;/li&gt;
&lt;li&gt;Añadir una columna con la fecha a partir de la concatenación del año, el mes y el día (usar el módulo &lt;code&gt;datetime&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Eliminar las filas con fechas no válidas (utilizar la función &lt;code&gt;isnat&lt;/code&gt; del módulo &lt;code&gt;numpy&lt;/code&gt;) y ordenar el DataFrame por estaciones, contaminantes y fecha.&lt;/li&gt;
&lt;li&gt;Mostrar por pantalla las estaciones y los contaminantes disponibles en el DataFrame.&lt;/li&gt;
&lt;li&gt;Crear una función que reciba una estación, un contaminante y un rango de fechas y devuelva una serie con las emisiones del contaminante dado en la estación y rango de fechas dado.&lt;/li&gt;
&lt;li&gt;Mostrar un resumen descriptivo (mímino, máximo, media, etc) para cada contaminante.&lt;/li&gt;
&lt;li&gt;Mostrar un resumen descriptivo para cada contaminente por distritos.&lt;/li&gt;
&lt;li&gt;Crear una función que reciba una estación y un contaminante y devuelva un resumen descriptivo de las emisiones del contaminante indicado en la estadión indicada.&lt;/li&gt;
&lt;li&gt;Crear una función que devuelva las emisiones medias mensuales de un contaminante y un año dados para todos las estaciones.&lt;/li&gt;
&lt;li&gt;Crear un función que reciba una estación de medición y devuelva un DataFrame con las medias mensuales de los distintos tipos de contaminantes.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/pandas/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ejercicios de la librería Matplotlib</title>
      <link>/docencia/python/ejercicios/matplotlib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/python/ejercicios/matplotlib/</guid>
      <description>&lt;h2 id=&#34;ejercicio-1&#34;&gt;Ejercicio 1&lt;/h2&gt;
&lt;p&gt;Escribir un programa que pregunte al usuario por las ventas de un rango de años y muestre por pantalla un diagrama de líneas con la evolución de las ventas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio1.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-2&#34;&gt;Ejercicio 2&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una diccionario con las notas de las asignaturas de un curso y una cadena con el nombre de un color y devuelva un diagrama de barras de las notas en el color dado.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio2.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-3&#34;&gt;Ejercicio 3&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una serie de Pandas con las notas de los alumnos de un curso y devuelva un diagrama de cajas con las notas. El diagrama debe tener el título &amp;ldquo;Distribución de notas&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio3.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-4&#34;&gt;Ejercicio 4&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una serie de Pandas con el número de ventas de un producto durante los meses de un trimestre y un título y cree un diagrama de sectores con las ventas en formato png con el titulo dado. El diagrama debe guardarse en un fichero con formato png y el título dado.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio4.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-5&#34;&gt;Ejercicio 5&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba una serie de Pandas con el número de ventas de un producto por años y una cadena con el tipo de gráfico a generar (lineas, barras, sectores, areas) y devuelva un diagrama del tipo indicado con la evolución de las ventas por años y con el título &amp;ldquo;Evolución del número de ventas&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio5.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-6&#34;&gt;Ejercicio 6&lt;/h2&gt;
&lt;p&gt;Escribir una función que reciba un dataframe de Pandas con los ingresos y gastos de una empresa por meses y devuelva un diagrama de líneas con dos líneas, una para los ingresos y otra para los gastos. El diagrama debe tener una leyenda identificando la línea de los ingresos y la de los gastos, un título con el nombre &amp;ldquo;Evolución de ingresos y gastos&amp;rdquo; y el eje y debe empezar en 0.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio6.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-7&#34;&gt;Ejercicio 7&lt;/h2&gt;
&lt;p&gt;El fichero 
&lt;a href=&#34;../soluciones/matplotlib/bancos.csv&#34;&gt;&lt;code&gt;bancos.csv&lt;/code&gt;&lt;/a&gt; contiene las cotizaciones de los principales bancos de España con : &lt;code&gt;Empresa&lt;/code&gt; (nombre de la empresa), &lt;code&gt;Apertura&lt;/code&gt; (precio de la acción a la apertura de bolsa), &lt;code&gt;Máximo&lt;/code&gt; (precio máximo de la acción durante la jornada), &lt;code&gt;Mínimo&lt;/code&gt; (precio mínimo de la acción durante la jornada), &lt;code&gt;Cierre&lt;/code&gt; (precio de la acción al cierre de bolsa), &lt;code&gt;Volumen&lt;/code&gt; (volumen al cierre de bolsa). Construir una función reciba el fichero &lt;code&gt;bancos.csv&lt;/code&gt; y cree un diagrama de líneas con las series temporales de las cotizaciones de cierre de cada banco.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio7.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ejercicio-8&#34;&gt;Ejercicio 8&lt;/h2&gt;
&lt;p&gt;El fichero 
&lt;a href=&#34;../soluciones/matplotlib/titanic.csv&#34;&gt;titanic.csv&lt;/a&gt; contiene información sobre los pasajeros del Titanic. Crear un dataframe con Pandas y a partir de él generar los siguientes diagramas.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Diagrama de sectores con los fallecidos y supervivientes.&lt;/li&gt;
&lt;li&gt;Histograma con las edades.&lt;/li&gt;
&lt;li&gt;Diagrama de barras con el número de personas en cada clase.&lt;/li&gt;
&lt;li&gt;Diagrama de barras con el número de personas fallecidas y supervivientes en cada clase.&lt;/li&gt;
&lt;li&gt;Diagrama de barras con el número de personas fallecidas y supervivientes acumuladas en cada clase.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://colab.research.google.com/github/asalber/aprendeconalf/blob/master/content/es/docencia/python/ejercicios/soluciones/matplotlib/ejercicio8.ipynb&#34; class=&#34;btn btn-info&#34;&gt;Solución&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cálculo con Derive</title>
      <link>/docencia/derive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/derive/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cálculo con Geogebra</title>
      <link>/docencia/geogebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/geogebra/</guid>
      <description>&lt;h2 id=&#34;geogebra&#34;&gt;Geogebra&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.geogebra.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GeoGebra&lt;/a&gt; es un software interactivo libre para el aprendizaje de Matemáticas en educación secundaria y superior. A continuación os presentamos un manual de Cálculo con Geogegra que se centra, sobre todo, en la resolución analítica de problemas de cálculo en una y varias variables con la vista CAS (cálculo simbólico) de Geogegra.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/asalber/practicas-geogebra/blob/master/practicas_geogebra.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;button type=&#34;button&#34; class=&#34;btn btn-primary&#34;&gt;
  &lt;i class=&#34;fas fa-file-pdf  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Descargar&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Libro de Bioestadística Aplicada con SPSS</title>
      <link>/docencia/spss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docencia/spss/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/libro_bioestadistica_spss.jpg&#34; alt=&#34;Libro Bioestadística Aplicada con SPSS&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;resumen&#34;&gt;Resumen&lt;/h2&gt;
&lt;p&gt;El análisis de datos en cualquier Ciencia Experimental o de la Salud es imprescindible para la compresión de los fenómenos biológicos, físicos o químicos.
Las nuevas tecnologías han hecho posible el desarrollo de programas capaces de recopilar, organizar y analizar enormes cantidades de datos con poco esfuerzo. SPSS es uno de los programas de análisis estadísticos más utilizados, sobre todo en el ámbito de las ciencias biosanitarias.
Este libro presenta las principales técnicas Estadísticas, tanto de Estadística Descriptiva como de Inferencia Estadística, aplicadas con SPSS a multitud de ejemplos del ámbito de las Ciencias de la Salud, desarrollados paso a paso.&lt;/p&gt;
&lt;h2 id=&#34;tabla-de-contenidos&#34;&gt;Tabla de contenidos&lt;/h2&gt;
&lt;p&gt;1 Introducción a SPSS&lt;br&gt;
1.1 Introducción&lt;br&gt;
1.2 Funciones básicas&lt;br&gt;
1.2.1 Arranque&lt;br&gt;
1.2.2 Introducción de datos&lt;br&gt;
1.2.3 Guardar datos&lt;br&gt;
1.2.4 Recuperar datos&lt;br&gt;
1.2.5 Modificación de datos&lt;br&gt;
1.2.6 Transformación y generación de datos&lt;br&gt;
1.2.7 Recodificación de datos&lt;br&gt;
1.2.8 Impresión&lt;br&gt;
1.2.9 Salir del programa&lt;br&gt;
1.2.10 Ayuda&lt;br&gt;
1.3 Ejercicios resueltos&lt;br&gt;
2 Distribuciones de Frecuencias y Gráficas&lt;br&gt;
2.1 Fundamentos teóricos&lt;br&gt;
2.1.1 Cálculo de frecuencias&lt;br&gt;
2.1.2 Representaciones gráficas&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Diagrama de barras y polígono de frecuencias&lt;/li&gt;
&lt;li&gt;Histogramas&lt;/li&gt;
&lt;li&gt;Diagrama de sectores&lt;/li&gt;
&lt;li&gt;Diagrama de caja y datos atípicos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.2 Ejercicios resueltos&lt;br&gt;
2.3 Ejercicios propuestos&lt;br&gt;
3 Estadísticos Muestrales&lt;br&gt;
3.1 Fundamentos teóricos&lt;br&gt;
3.1.1 Medidas de posición&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Media aritmética&lt;/li&gt;
&lt;li&gt;Mediana&lt;/li&gt;
&lt;li&gt;Moda&lt;/li&gt;
&lt;li&gt;Cuantiles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.1.2 Medidas de dispersión&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rango o Recorrido&lt;/li&gt;
&lt;li&gt;Rango intercuartílico&lt;/li&gt;
&lt;li&gt;Varianza&lt;/li&gt;
&lt;li&gt;Desviación típic&lt;/li&gt;
&lt;li&gt;Coeficiente de variación de Pearson&lt;/li&gt;
&lt;li&gt;Medidas de forma&lt;/li&gt;
&lt;li&gt;Coeficiente de asimetría de Fisher&lt;/li&gt;
&lt;li&gt;Coeficiente de apuntamiento o curtosis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.1.4 Estadísticos por grupos&lt;br&gt;
3.2 Ejercicios resueltos&lt;br&gt;
3.3 Ejercicios propuestos&lt;br&gt;
4 Regresión Lineal Simple y Correlación&lt;br&gt;
4.1 Fundamentos teóricos&lt;br&gt;
4.1.1 Regresión&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rectas de regresión&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4.1.2 Correlación&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Varianza residual&lt;/li&gt;
&lt;li&gt;Coeficiente de determinación&lt;/li&gt;
&lt;li&gt;Coeficiente de determinación lineal&lt;/li&gt;
&lt;li&gt;Coeficiente de correlación&lt;/li&gt;
&lt;li&gt;Fiabilidad de las predicciones&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4.2 Ejercicios resueltos&lt;br&gt;
4.3 Ejercicios propuestos&lt;br&gt;
5 Regresión No Lineal&lt;br&gt;
5.1 Fundamentos teóricos&lt;br&gt;
5.2 Ejercicios resueltos&lt;br&gt;
5.3 Ejercicios propuestos&lt;br&gt;
6 Variables Aleatorias Discretas&lt;br&gt;
6.1 Fundamentos teóricos&lt;br&gt;
6.1.1 Variables aleatorias&lt;br&gt;
6.1.2 Variables aleatorias discretas&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Función de probabilidad&lt;/li&gt;
&lt;li&gt;Función de distribución&lt;/li&gt;
&lt;li&gt;Estadísticos poblacionales&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;6.1.3 Variable Binomial&lt;br&gt;
6.1.4 Variable de Poisson&lt;br&gt;
6.2 Ejercicios resueltos&lt;br&gt;
6.3 Ejercicios propuestos&lt;br&gt;
7 Variables Aleatorias Continuas&lt;br&gt;
7.1 Fundamentos teóricos&lt;br&gt;
7.1.1 Variables aleatorias&lt;br&gt;
7.1.2 Variables aleatorias continuas&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Función de densidad&lt;/li&gt;
&lt;li&gt;Función de distribución&lt;/li&gt;
&lt;li&gt;Estadísticos poblacionales&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;7.1.3 Distribución Uniforme Continua&lt;br&gt;
7.1.4 Distribución Normal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distribución Chi-cuadrado&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;7.1.5 Distribución T de Student&lt;br&gt;
7.1.6 Distribución F de Fisher-Snedecor&lt;br&gt;
7.2 Ejercicios resueltos&lt;br&gt;
7.3 Ejercicios propuestos&lt;br&gt;
8 Intervalos de Confianza para Medias y Proporciones&lt;br&gt;
8.1 Fundamentos teóricos&lt;br&gt;
8.1.1 Inferencia estadística y estimación de parámetros&lt;br&gt;
8.1.2 Intervalos de confianza&lt;br&gt;
8.1.3 Intervalos de confianza para la media&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intervalo de confianza para la media de una población normal con varianza conocida en muestras de cualquier tamaño&lt;/li&gt;
&lt;li&gt;Intervalo de confianza para la media de una población normal con varianza desconocida en muestras de cualquier tamaño&lt;/li&gt;
&lt;li&gt;Intervalo de confianza para la media de una población no normal, varianza conocida y muestras grandes&lt;/li&gt;
&lt;li&gt;Intervalo de confianza para la media de una población no normal, varianza desconocida y muestras grandes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;8.1.4 Intervalos de confianza para una proporción poblacional&lt;br&gt;
8.2 Ejercicios resueltos&lt;br&gt;
8.3 Ejercicios propuestos&lt;br&gt;
9 Intervalos de Confianza para Comparar Poblaciones&lt;br&gt;
9.1 Fundamentos teóricos&lt;br&gt;
9.1.1 Inferencia estadística aplicada a la comparación de poblaciones&lt;br&gt;
9.1.2 Intervalos de confianza para la diferencia de medias de poblaciones independientes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intervalo de confianza para la diferencia de medias en poblaciones normales, con varianzas poblacionales conocidas, independientemente del tamaño de la muestra&lt;/li&gt;
&lt;li&gt;Intervalo de confianza para la diferencia de medias en poblaciones normales, con varianzas poblacionales desconocidas, independientemente del tamaño de la muestra&lt;/li&gt;
&lt;li&gt;Intervalo de confianza para la diferencia de medias en poblaciones no normales y muestras grandes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;9.1.3 Intervalos de confianza para la media de la diferencia en poblaciones emparejadas&lt;br&gt;
9.1.4 Intervalos de confianza para la diferencia de proporciones&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intervalo de confianza para la razón de dos varianzas de poblaciones normales&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;9.2 Ejercicios resueltos&lt;br&gt;
9.3 Ejercicios propuestos&lt;br&gt;
10 Contraste de Hipótesis&lt;br&gt;
10.1 Fundamentos teóricos&lt;br&gt;
10.1.1Inferencia estadística y contrastes de hipótesis&lt;br&gt;
10.1.2 Tipos de contrastes de hipótesis&lt;br&gt;
10.1.3 Elementos de un contraste&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hipótesis nula e hipótesis alternativa&lt;/li&gt;
&lt;li&gt;Errores en un contraste. Nivel de significación y potencia&lt;/li&gt;
&lt;li&gt;Estadístico del contraste y regiones de aceptación y rechazo&lt;/li&gt;
&lt;li&gt;El p-valor de un contraste&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.1.4 Contrastes para la media de una población&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contraste para la media de una población normal con varianza conocida&lt;/li&gt;
&lt;li&gt;Contraste para la media de una población normal con varianza desconocida&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.1.5 Contrastes para una proporción de una población&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contraste para la proporción en muestras grandes y distribuciones simétricas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.1.6Contrastes para la varianza de una población&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contraste para la varianza de una población normal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.1.7 Contrastes para la comparación de medias poblacionales&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contraste para la comparación de medias de poblaciones normales con varianzas conocidas&lt;/li&gt;
&lt;li&gt;Contraste para la comparación de medias de poblaciones normales con varianzas desconocidas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.1.8 Contrastes para la comparación de proporciones poblacionales&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contraste para la comparación de proporciones en muestras grandes y distribuciones simétricas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.1.9Contrastes para la comparación de varianzas poblacionales&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contraste para la comparación de varianzas de poblaciones normales&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10.2 Ejercicios resueltos&lt;br&gt;
10.3 Ejercicios propuestos&lt;br&gt;
11 Análisis de la Varianza de un Factor&lt;br&gt;
11.1 Fundamentos teóricos&lt;br&gt;
11.1.1 El contraste de ANOVA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tabla de ANOVA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;11.1.2 Test de comparaciones múltiples y por parejas&lt;br&gt;
11.2 Ejercicios resueltos&lt;br&gt;
11.3 Ejercicios propuestos&lt;br&gt;
12 Contrastes de Hipótesis No Paramétricos&lt;br&gt;
12.1 Fundamentos teóricos&lt;br&gt;
12.1.1 Contrastes no paramétricos más habituales&lt;br&gt;
12.1.2 Aleatoriedad de una muestra: Contraste de rachas&lt;br&gt;
12.1.3 Contrastes de normalidad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Estadísticos de asimetría y curtosis&lt;/li&gt;
&lt;li&gt;Contraste de Kolmogorov-Smirnov y corrección de Lilliefors&lt;/li&gt;
&lt;li&gt;Contraste de Shapiro-Wilk&lt;/li&gt;
&lt;li&gt;Gráficos Q-Q y P-P de comparación con la distribución normal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;12.1.4 Contraste de la U de Mann-Whitney para la comparación de dos poblaciones independientes&lt;br&gt;
12.1.5 Contraste de Wilcoxon para la comparación de dos poblaciones emparejadas&lt;br&gt;
12.1.6 Contraste de Kruskal-Wallis para la comparación de varias poblaciones independientes&lt;br&gt;
12.1.7 Contraste de Friedman para la comparación de medidas repetidas&lt;br&gt;
12.1.8 Contraste de Levene para la comparación de varianzas&lt;br&gt;
12.1.9 El coeficiente de correlación de Spearman&lt;br&gt;
12.2 Ejercicios resueltos&lt;br&gt;
12.3 Ejercicios propuestos&lt;br&gt;
13 Contrastes Basados en el Estadístico Chi-cuadrado&lt;br&gt;
13.1 Fundamentos teóricos&lt;br&gt;
13.1.1 Contraste Chi-cuadrado de Pearson para ajuste de distribuciones&lt;br&gt;
13.1.2 Contraste Chi-cuadrado en tablas de contingencia&lt;br&gt;
13.1.3 Contraste exacto de Fisher&lt;br&gt;
13.1.4 Contraste de McNemar para datos emparejados&lt;br&gt;
13.2 Ejercicios Resueltos&lt;br&gt;
13.3 Ejercicios propuestos&lt;br&gt;
14 Análisis de Concordancia&lt;br&gt;
14.1 Fundamentos teóricos&lt;br&gt;
14.1.1 Introducción&lt;br&gt;
14.1.2 Concordancia entre dos variables cuantitativas: Coeficiente de correlación intraclase&lt;br&gt;
14.1.3 Concordancia entre dos variables cualitativas: Kappa de Cohen&lt;br&gt;
14.1.4 Concordancia entre dos variables cualitativas ordinales: Kappa ponderado&lt;br&gt;
14.2 Ejercicios resueltos&lt;br&gt;
14.3 Ejercicios propuestos&lt;/p&gt;
&lt;h2 id=&#34;autores&#34;&gt;Autores&lt;/h2&gt;
&lt;p&gt;Santiago Angulo Díaz Parreño&lt;br&gt;
José Miguel Cárdenas Rebollo&lt;br&gt;
Anselomo Romero Limón&lt;br&gt;
Alfredo Sánchez Alberca&lt;/p&gt;
&lt;p&gt;Los autores son profesores del Departamento de Matemática Aplicada y Estadística de la Universidad CEU San Pablo.
Imparten las asignaturas de Matemáticas y Estadística en las facultades de Farmacia y Medicina.
Son miembros de la Unidad de Bioestadística de esta universidad en la que han realizado multitud de trabajos de investigación aplicados a las Ciencias de la Salud.&lt;/p&gt;
&lt;h2 id=&#34;capítulo-de-muestra&#34;&gt;Capítulo de muestra&lt;/h2&gt;
&lt;p&gt;Descarga el siguiente capítulo de muestra para tener una idea del contenido del libro.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;capitulo_regresion.pdf&#34;&gt;Regresión Lineal Simple y Correlación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dónde-adquirirlo&#34;&gt;¿Dónde adquirirlo?&lt;/h2&gt;
&lt;p&gt;El libro puede adquirirse en la página web de 
&lt;a href=&#34;https://www.ceuediciones.es/catalogo/libros/medicina/bioestadistica-aplicada-con-spss/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CEU Ediciones&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
